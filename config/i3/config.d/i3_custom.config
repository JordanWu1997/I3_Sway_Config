# ~/.config/i3/config.d/i3_custom.config
# vim: syntax=i3
# ======================================================================================
# All About Customization
# ======================================================================================
# Customization includes wallpaper, theme, and visual effects (e.g. blur/animation)

# Customization mode (wrapper for wallpaper_mode, theme mode, and picom_mode)
set $mode_customization Customization: [b]order [c]onky [d]unst [p]icom [f]lashfocus [t]heme [w]allpaper [v]ariety [r]eload
bindsym Mod4+Shift+c mode "$mode_customization"
mode "$mode_customization" {
    bindsym b mode "$mode_border"
    bindsym c mode "$mode_conky"
    bindsym d mode "$mode_dunst_option"
    bindsym p mode "$mode_picom"
    bindsym f mode "$mode_flashfocus"
    bindsym t mode "$mode_theme"
    bindsym w mode "$mode_wallpaper"
    bindsym v mode "$mode_variety"
    bindsym r mode "$mode_reload"
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Note: Wallpaper mode (local wallpaper support)
# [Important]: Wallpaper directory (Add below lines in .profile)
#              Please change to directories where you store wallpaper.
#              Feel free to modify these wallpaper directories as you want.
# --------------------------------------------------------------------------------------
#export WALLPAPERI3="$HOME/.config/i3/share"
#export WALLPAPERV="$HOME/Pictures/VARIETY_SAVED"
#export WALLPAPERD="$HOME/Pictures/WALLPAPERS"
#export WALLPAPERF="$WALLPAPERD/FAVORITES"
#export WALLPAPER1="$WALLPAPERD/I3WM"
#export WALLPAPER2="$WALLPAPERD/FEDORA"
#export WALLPAPER3="$WALLPAPERD/ALMA"
#export WALLPAPER4="$WALLPAPERD/CATS"
#export WALLPAPER5="$WALLPAPERD/LINUX"
#export WALLPAPER6="$WALLPAPERD/THINKPAD"
#export WALLPAPER7="$WALLPAPERD/WINDOWS11"
#export WALLPAPER8="$WALLPAPERD/DT_WALLPAPERS"
#export WALLPAPER9="$WALLPAPERD/MISCELLANEOUS"
# --------------------------------------------------------------------------------------

# Wallpaper mode (within customization mode)
set $mode_wallpaper Wallpaper: [i]nfo [(Shift)+1/2/3/4/5/6/7/8/9/d/a]:(select)/shuffle from WALLPAPER#/default/all [(Ctrl)+s]:save (to_favorite)/as_default [r]estore_to_default [t]heme_mode
mode "$mode_wallpaper" {
    # Show current wallpaper information
    bindsym i exec $I3_SCRIPT/i3_wallpaper_operator.sh feh show_current
    # Shuffle wallpapers from $WALLPAPER#, default
    bindsym 1 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER1))" && feh --bg-fill $(find $WALLPAPER1 -name '*.*g' | shuf -n1)
    bindsym 2 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER2))" && feh --bg-fill $(find $WALLPAPER2 -name '*.*g' | shuf -n1)
    bindsym 3 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER3))" && feh --bg-fill $(find $WALLPAPER3 -name '*.*g' | shuf -n1)
    bindsym 4 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER4))" && feh --bg-fill $(find $WALLPAPER4 -name '*.*g' | shuf -n1)
    bindsym 5 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER5))" && feh --bg-fill $(find $WALLPAPER5 -name '*.*g' | shuf -n1)
    bindsym 6 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER6))" && feh --bg-fill $(find $WALLPAPER6 -name '*.*g' | shuf -n1)
    bindsym 7 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER7))" && feh --bg-fill $(find $WALLPAPER7 -name '*.*g' | shuf -n1)
    bindsym 8 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER8))" && feh --bg-fill $(find $WALLPAPER8 -name '*.*g' | shuf -n1)
    bindsym 9 exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPER9))" && feh --bg-fill $(find $WALLPAPER9 -name '*.*g' | shuf -n1)
    bindsym d exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper (DEFAULTS)" && feh --bg-fill $(find $WALLPAPERI3 -name '*wallpaper*.*g' | shuf -n1)
    bindsym a exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper (ALL)" && feh --bg-fill $(find $WALLPAPERD -name '*.*g' | shuf -n1)
    # Select wallpaper from $WALLPAPER#, default and all
    bindsym Shift+1 exec feh --bg-fill $(find $WALLPAPER1 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER1)")
    bindsym Shift+2 exec feh --bg-fill $(find $WALLPAPER2 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER2)")
    bindsym Shift+3 exec feh --bg-fill $(find $WALLPAPER3 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER3)")
    bindsym Shift+4 exec feh --bg-fill $(find $WALLPAPER4 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER4)")
    bindsym Shift+5 exec feh --bg-fill $(find $WALLPAPER5 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER5)")
    bindsym Shift+6 exec feh --bg-fill $(find $WALLPAPER6 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER6)")
    bindsym Shift+7 exec feh --bg-fill $(find $WALLPAPER7 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER7)")
    bindsym Shift+8 exec feh --bg-fill $(find $WALLPAPER8 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER8)")
    bindsym Shift+9 exec feh --bg-fill $(find $WALLPAPER9 -name '*.*g' | rofi -config $HOME/.config/rofi/config_singlecol.rasi -dmenu -i -p "$(basename $WALLPAPER9)")
    bindsym Shift+d exec feh --bg-fill $(find $WALLPAPERI3 -name 'default_*wallpaper*.*g' | rofi -dmenu -config $HOME/.config/rofi/config_singlecol.rasi -i -p "DEFAULTS" )
    bindsym Shift+a exec feh --bg-fill $(find $WALLPAPERD  -name '*.*g' | rofi -dmenu -config $HOME/.config/rofi/config_singlecol.rasi -i -p 'ALL')
    # Shuffle/Select from favorites
    bindsym f       exec notify-send -u low "Wallpaper Mode" "Shuffle wallpaper ($(basename $WALLPAPERF))" && feh --bg-fill $(find $WALLPAPERF -name '*.*g' | shuf -n1)
    bindsym Shift+f exec feh --bg-fill $(find $WALLPAPERF -name '*.*g' | rofi -dmenu -config $HOME/.config/rofi/config_singlecol.rasi -i -p "$(basename $WALLPAPERF)")
    # Wallpaper options
    bindsym r      exec notify-send -u low "Wallpaper Mode" "Restore wallpaper to default" && feh --bg-fill $HOME/.config/i3/share/default_wallpaper
    bindsym s      exec notify-send -u low "Wallpaper Mode" "Save current to favorite" && $I3_SCRIPT/i3_wallpaper_operator.sh feh save_current
    bindsym Ctrl+s exec notify-send -u low "Wallpaper Mode" "Save current as default" && $I3_SCRIPT/i3_wallpaper_operator.sh feh set_default
    # Theme mode
    bindsym t mode "$mode_theme"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Variety mode (within customization mode)
set $mode_variety Variety: [i]nfo [p]revious [n]ext [(Ctrl)+s]:save (as_default)/to_favorite [(Shift)+f/a]:(select)/shuffle favorite/all_downloaded [P]ause [R]esume [q]uit [t]heme_mode
mode "$mode_variety" {
    # Show current variety info
    bindsym i exec $I3_SCRIPT/i3_wallpaper_operator.sh variety show_current
    # Previous/Next/Fast-forward variety
    bindsym p exec notify-send -u low "Variety Mode" "Previous Wallpaper (VARIETY)" && variety --previous
    bindsym n exec notify-send -u low "Variety Mode" "Next Wallpaper (VARIETY)" && variety --next
    # Shuffle/Select favriote variety
    bindsym f       exec notify-send -u low "Variety Mode" "Shuffle wallpaper ($(basename $WALLPAPERV))" && variety --set=$(find $WALLPAPERV -name "*.jpg" | shuf -n1)
    bindsym Shift+f exec variety --set=$(find $WALLPAPERV -name '*.*g' | rofi -dmenu -config $HOME/.config/rofi/config_singlecol.rasi -i -p "$(basename $WALLPAPERV)")
    # All downloaded
    bindsym a       exec notify-send -u low "Variety Mode" "All Downloaded (VARIETY)" && variety --download
    bindsym Shift+a exec variety --set=$(find $HOME/.config/variety/Downloaded -name '*.*g' | rofi -dmenu -config $HOME/.config/rofi/config_singlecol.rasi -i -p 'ALL')
    # Variety options
    bindsym Shift+p exec notify-send -u low "Variety Mode" "Pause Changing Wallpaper (VARIETY)" && variety --pause
    bindsym Shift+r exec notify-send -u low "Variety Mode" "Resume Changing Wallpaper (VARIETY)" && variety --resume
    bindsym s       exec notify-send -u low "Variety Mode" "Save to Favorite (VARIETY)" && variety --favorite
    bindsym Ctrl+s  exec notify-send -u low "Variety Mode" "Save current as default wallpaper (VARIETY)" && $I3_SCRIPT/i3_wallpaper_operator.sh variety set_default
    bindsym q       exec notify-send -u low "Variety Mode" "Quit Variety" && variety --quit; mode "default"
    # Theme mode
    bindsym t mode "$mode_theme"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Border mode (within customization mode)
set $mode_border Border: [1]:border_width [2]:border_option [3]:border_colorscheme
mode "$mode_border" {
    bindsym 1 mode "$mode_border_width"
    bindsym 2 mode "$mode_border_option"
    bindsym 3 mode "$mode_border_colorscheme"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Border width mode (within border mode)
set $mode_border_width Border width: [1]:1pix [2]:2pix [3]:3pix [4]:4pix [5]:5pix [9]:10pix [0]:no_border [r]estore_to_default [s]et_default_border_width
mode "$mode_border_width" {
    bindsym 1 border pixel 1
    bindsym 2 border pixel 2
    bindsym 3 border pixel 3
    bindsym 4 border pixel 4
    bindsym 5 border pixel 5
    bindsym 9 border pixel 10
    bindsym 0 border none
    bindsym r border $default_titlebar_style $default_border_width
    bindsym s mode "$mode_set_border"
    # i3 keybindings compatibility: change focus
    bindsym Mod4+h focus left
    bindsym Mod4+j focus down
    bindsym Mod4+k focus up
    bindsym Mod4+l focus right
    # i3 keybindings compatibility: change focus between tiling/floating windows
    bindsym Mod4+space focus mode_toggle
    # Back to border mode: "Enter"
    bindsym Return mode "$mode_border"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Set default border width mode (within border width mode)
set $mode_set_border Set default border width: [1]:1pix [2]:2pix [3]:3pix [4]:4pix [5]:5pix [9]:10pix [0]:no_border
mode "$mode_set_border" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 1; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 2; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 3; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 4; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 5; mode "default"
    bindsym 9 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 10; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_default_valuechanger.sh border_width 0; mode "default"
    # Back to border mode: "Enter"
    bindsym Return mode "$mode_border_width"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Set border option (within border mode
set $mode_border_option Border option: [1]:show_both_edge [2]:hide_both_edge [3]:hide_top/bottom_edge [4]:hide_left/right_edge [5]:hide_both_edge_if_only_one [6]:hide_both_edge_if_no_gaps
mode "$mode_border_option" {
    bindsym 1 exec $I3_SCRIPT/i3_border_operator.sh show_both_edge; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_border_operator.sh hide_both_edge; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_border_operator.sh hide_horizontal_edge; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_border_operator.sh hide_vertical_edge; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_border_operator.sh hide_both_edge_if_only_one; mode "default"
    bindsym 6 exec $I3_SCRIPT/i3_border_operator.sh hide_both_edge_if_no_gaps; mode "default"
    # Back to border mode: "Enter"
    bindsym Return mode "$mode_border"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Border colorscheme mode (within border mode)
set $mode_border_colorscheme Border colorscheme: [1]:monochromic [2]:dirchromatic [3]:monochromic_inversed
mode "$mode_border_colorscheme" {
    bindsym 1 exec $I3_SCRIPT/i3_window_decoractor.sh monochromic
    bindsym 2 exec $I3_SCRIPT/i3_window_decoractor.sh dirchromatic
    bindsym 3 exec $I3_SCRIPT/i3_window_decoractor.sh monochromic_inversed
    # Back to border mode: "Enter"
    bindsym Return mode "$mode_border"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}


# Dunst option mode(within dunst mode)
set $mode_dunst_option Dunst option: [1]:position [2]:offset [3]:text_alignment [4]:fontsize [5]:icon_position [r]eload_mode
mode "$mode_dunst_option" {
    bindsym 1 mode $mode_dunst_position
    bindsym 2 mode $mode_dunst_offset
    bindsym 3 mode $mode_dunst_alignment
    bindsym 4 mode $mode_dunst_fontsize
    bindsym 5 mode $mode_dunst_icon_position
    # Reload mode
    bindsym r mode "$mode_reload"
    # Back to dunst mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Dunst position mode (within dunst option mode)
set $mode_dunst_position Dunst position: [1/2/3]:top-left/center/right [4/5/6]:center-left/center/right [7/8/9]:bottom-left/center/right
mode "$mode_dunst_position" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position top-left; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position top-center; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position top-right; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position left-center; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position center; mode "default"
    bindsym 6 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position right-center; mode "default"
    bindsym 7 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position bottom-left; mode "default"
    bindsym 8 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position bottom-center; mode "default"
    bindsym 9 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_position bottom-right; mode "default"
    # Back to dunst mode: "Enter"
    bindsym Return mode "$mode_dunst_option"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Dunst offset mode (within dunst option mode)
set $mode_dunst_offset Dunst offset: [1]:5pix [2]:10pix [3]:15pix [4]:20pix [5]:25pix [6]:30pix [7]:35pix [8]:40pix [9]:45pix [0]:no_offset
mode "$mode_dunst_offset" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 5; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 10; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 15; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 20; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 25; mode "default"
    bindsym 6 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 30; mode "default"
    bindsym 7 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 35; mode "default"
    bindsym 8 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 40; mode "default"
    bindsym 9 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 45; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_offset 0; mode "default"
    # Back to dunst mode: "Enter"
    bindsym Return mode "$mode_dunst_option"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Dunst alignment mode (within dunst option mode)
set $mode_dunst_alignment Dunst alignment: [1]:left [2]:center [3]:right
mode "$mode_dunst_alignment" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_alignment left; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_alignment center; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_alignment right; mode "default"
    # Back to dunst mode: "Enter"
    bindsym Return mode "$mode_dunst_option"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Dunst fontsize mode (within dunst option mode)
set $mode_dunst_fontsize Dunst fontsize: [1]:8pix [2]:9pix [3]:10pix [4]:11pix [5]:12pix [6]:13pix [7]:14pix [8]:15pix [9]:16pix
mode "$mode_dunst_fontsize" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 8; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 9; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 10; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 11; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 12; mode "default"
    bindsym 6 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 13; mode "default"
    bindsym 7 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 14; mode "default"
    bindsym 8 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 15; mode "default"
    bindsym 9 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_fontsize 16; mode "default"
    # Back to dunst mode: "Enter"
    bindsym Return mode "$mode_dunst_option"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}
# Dunst icon position mode (within dunst option mode)
set $mode_dunst_icon_position Dunst icon position: [1]:left [2]:top [3]:right [0]:off
mode "$mode_dunst_icon_position" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_icon_position left; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_icon_position top; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_icon_position right; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_default_valuechanger.sh dunst_icon_position off; mode "default"
    # Back to dunst mode: "Enter"
    bindsym Return mode "$mode_dunst_option"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Conky mode (within customization mode, including system monitor and bindkey sheet)
set $mode_conky Conky: [1]:bindkey_sheet [2]:system_monitor [3/4/5]:show_all_conky on default/primary/all display [0]:killall_conky [s]et_default_conky_style [r]eload_mode
mode "$mode_conky" {
    bindsym 1 mode "$mode_conky_bindkey"
    bindsym 2 mode "$mode_conky_system"
    bindsym 3 exec $I3_SCRIPT/i3_conky_monitor_display.sh default
    bindsym 4 exec $I3_SCRIPT/i3_conky_monitor_display.sh primary
    bindsym 5 exec $I3_SCRIPT/i3_conky_monitor_display.sh all
    bindsym 0 exec killall conky
    # Conky default style mode
    bindsym s mode "$mode_set_default_conky_style"
    # Reload mode
    bindsym r mode "$mode_reload"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Bindkey sheet mode (within conky mode)
set $mode_conky_bindkey Bindkey: [e]nable [d]isable [1]:title_color [2]:item_color [3]:background_opacity
mode "$mode_conky_bindkey" {
    bindsym e exec conky -c $HOME/.config/conky/conky_config_bindkey
    bindsym d exec kill $(pgrep -f "conky -c $HOME/.config/conky/conky_config_bindkey")
    bindsym 1 mode "$mode_conky_palette_bindkey_title"
    bindsym 2 mode "$mode_conky_palette_bindkey_item"
    bindsym 3 mode "$mode_conky_bindkey_opacity"
    # Back to conky mode: "Enter"
    bindsym Return mode "$mode_conky"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# System monitor mode (within conky mode)
set $mode_conky_system System: [e]nable [d]isable [1]:title_color [2]:item_color [3]:background_opacity
mode "$mode_conky_system" {
    bindsym e exec conky -c $HOME/.config/conky/conky_config_system
    bindsym d exec kill $(pgrep -f "conky -c $HOME/.config/conky/conky_config_system")
    bindsym 1 mode "$mode_conky_palette_system_title"
    bindsym 2 mode "$mode_conky_palette_system_item"
    bindsym 3 mode "$mode_conky_system_opacity"
    # Back to conky mode: "Enter"
    bindsym Return mode "$mode_conky"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Opacity mode (opacity for conky system, within conky mode)
set $mode_conky_system_opacity System opacity: [1]:0% [2]:25% [3]:50% [4]:75% [5]:100%
mode "$mode_conky_system_opacity" {
    bindsym 1  exec $I3_SCRIPT/i3_conky_colorchanger.sh system bg_opacity opac0; mode "$mode_conky_system"
    bindsym 2  exec $I3_SCRIPT/i3_conky_colorchanger.sh system bg_opacity opac25; mode "$mode_conky_system"
    bindsym 3  exec $I3_SCRIPT/i3_conky_colorchanger.sh system bg_opacity opac50; mode "$mode_conky_system"
    bindsym 4  exec $I3_SCRIPT/i3_conky_colorchanger.sh system bg_opacity opac75; mode "$mode_conky_system"
    bindsym 5  exec $I3_SCRIPT/i3_conky_colorchanger.sh system bg_opacity opac100; mode "$mode_conky_system"
    # Back to conky_system mode: "Enter"
    bindsym Return mode "$mode_conky_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Opacity mode (opacity for conky bindkey, within conky mode)
set $mode_conky_bindkey_opacity Bindkey opacity: [1]:0% [2]:25% [3]:50% [4]:75% [5]:100%
mode "$mode_conky_bindkey_opacity" {
    bindsym 1  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey bg_opacity opac0; mode "$mode_conky_bindkey"
    bindsym 2  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey bg_opacity opac25; mode "$mode_conky_bindkey"
    bindsym 3  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey bg_opacity opac50; mode "$mode_conky_bindkey"
    bindsym 4  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey bg_opacity opac75; mode "$mode_conky_bindkey"
    bindsym 5  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey bg_opacity opac100; mode "$mode_conky_bindkey"
    # Back to conky_bindkey mode: "Enter"
    bindsym Return mode "$mode_conky_bindkey"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Palette mode (color palette for conky bindkey item, within conky mode)
set $mode_conky_palette_bindkey_item Color for conky bindkey item: [1/F1]:black [2/F2]:red [3/F3]:green [4/F4]:yellow [5/F5]:blue [6/F6]:magenta [7/F7]:cyan [8/F8]:white
mode "$mode_conky_palette_bindkey_item" {
    bindsym 1  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color0; mode "$mode_conky_bindkey"
    bindsym 2  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color1; mode "$mode_conky_bindkey"
    bindsym 3  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color2; mode "$mode_conky_bindkey"
    bindsym 4  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color3; mode "$mode_conky_bindkey"
    bindsym 5  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color4; mode "$mode_conky_bindkey"
    bindsym 6  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color5; mode "$mode_conky_bindkey"
    bindsym 7  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color6; mode "$mode_conky_bindkey"
    bindsym 8  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color7; mode "$mode_conky_bindkey"
    bindsym F1 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color8; mode "$mode_conky_bindkey"
    bindsym F2 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color9; mode "$mode_conky_bindkey"
    bindsym F3 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color10; mode "$mode_conky_bindkey"
    bindsym F4 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color11; mode "$mode_conky_bindkey"
    bindsym F5 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color12; mode "$mode_conky_bindkey"
    bindsym F6 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color13; mode "$mode_conky_bindkey"
    bindsym F7 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color14; mode "$mode_conky_bindkey"
    bindsym F8 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey item color15; mode "$mode_conky_bindkey"
    # Back to conky_bindkey mode: "Enter"
    bindsym Return mode "$mode_conky_bindkey"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Palette mode (color palette for conky bindkey title, within conky mode)
set $mode_conky_palette_bindkey_title Color for conky bindkey title: [1/F1]:black [2/F2]:red [3/F3]:green [4/F4]:yellow [5/F5]:blue [6/F6]:magenta [7/F7]:cyan [8/F8]:white
mode "$mode_conky_palette_bindkey_title" {
    bindsym 1  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color0; mode "$mode_conky_bindkey"
    bindsym 2  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color1; mode "$mode_conky_bindkey"
    bindsym 3  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color2; mode "$mode_conky_bindkey"
    bindsym 4  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color3; mode "$mode_conky_bindkey"
    bindsym 5  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color4; mode "$mode_conky_bindkey"
    bindsym 6  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color5; mode "$mode_conky_bindkey"
    bindsym 7  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color6; mode "$mode_conky_bindkey"
    bindsym 8  exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color7; mode "$mode_conky_bindkey"
    bindsym F1 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color8; mode "$mode_conky_bindkey"
    bindsym F2 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color9; mode "$mode_conky_bindkey"
    bindsym F3 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color10; mode "$mode_conky_bindkey"
    bindsym F4 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color11; mode "$mode_conky_bindkey"
    bindsym F5 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color12; mode "$mode_conky_bindkey"
    bindsym F6 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color13; mode "$mode_conky_bindkey"
    bindsym F7 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color14; mode "$mode_conky_bindkey"
    bindsym F8 exec $I3_SCRIPT/i3_conky_colorchanger.sh bindkey title color15; mode "$mode_conky_bindkey"
    # Back to conky_bindkey mode: "Enter"
    bindsym Return mode "$mode_conky_bindkey"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Palette mode (color palette for conky system item, within conky mode)
set $mode_conky_palette_system_item Color for conky system item: [1/F1]:black [2/F2]:red [3/F3]:green [4/F4]:yellow [5/F5]:blue [6/F6]:magenta [7/F7]:cyan [8/F8]:white
mode "$mode_conky_palette_system_item" {
    bindsym 1  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color0; mode "$mode_conky_system"
    bindsym 2  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color1; mode "$mode_conky_system"
    bindsym 3  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color2; mode "$mode_conky_system"
    bindsym 4  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color3; mode "$mode_conky_system"
    bindsym 5  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color4; mode "$mode_conky_system"
    bindsym 6  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color5; mode "$mode_conky_system"
    bindsym 7  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color6; mode "$mode_conky_system"
    bindsym 8  exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color7; mode "$mode_conky_system"
    bindsym F1 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color8; mode "$mode_conky_system"
    bindsym F2 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color9; mode "$mode_conky_system"
    bindsym F3 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color10; mode "$mode_conky_system"
    bindsym F4 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color11; mode "$mode_conky_system"
    bindsym F5 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color12; mode "$mode_conky_system"
    bindsym F6 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color13; mode "$mode_conky_system"
    bindsym F7 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color14; mode "$mode_conky_system"
    bindsym F8 exec $I3_SCRIPT/i3_conky_colorchanger.sh system item color15; mode "$mode_conky_system"
    # Back to conky_system mode: "Enter"
    bindsym Return mode "$mode_conky_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Palette mode (color palette for conky system title, within conky mode)
set $mode_conky_palette_system_title Color for conky system title: [1/F1]:black [2/F2]:red [3/F3]:green [4/F4]:yellow [5/F5]:blue [6/F6]:magenta [7/F7]:cyan [8/F8]:white
mode "$mode_conky_palette_system_title" {
    bindsym 1  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color0; mode "$mode_conky_system"
    bindsym 2  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color1; mode "$mode_conky_system"
    bindsym 3  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color2; mode "$mode_conky_system"
    bindsym 4  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color3; mode "$mode_conky_system"
    bindsym 5  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color4; mode "$mode_conky_system"
    bindsym 6  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color5; mode "$mode_conky_system"
    bindsym 7  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color6; mode "$mode_conky_system"
    bindsym 8  exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color7; mode "$mode_conky_system"
    bindsym F1 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color8; mode "$mode_conky_system"
    bindsym F2 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color9; mode "$mode_conky_system"
    bindsym F3 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color10; mode "$mode_conky_system"
    bindsym F4 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color11; mode "$mode_conky_system"
    bindsym F5 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color12; mode "$mode_conky_system"
    bindsym F6 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color13; mode "$mode_conky_system"
    bindsym F7 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color14; mode "$mode_conky_system"
    bindsym F8 exec $I3_SCRIPT/i3_conky_colorchanger.sh system title color15; mode "$mode_conky_system"
    # Back to conky_system mode: "Enter"
    bindsym Return mode "$mode_conky_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Set default conky (within conky mode)
set $mode_set_default_conky_style Set default conky style: [1]:full [2]:light [3]:minimal
mode "$mode_set_default_conky_style" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh conky_style full; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh conky_style light; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh conky_style minimal; mode "default"
    # Back to conky mode: "Enter"
    bindsym Return mode "$mode_conky"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Theme mode (pywal color theme support)
# -- Autotune Xcolor corresponding to current wallpaper to get a better theme consistency
# Pywal (https://github.com/dylanaraps/pywal)
# -- Installation: pip install pywal
set $mode_theme Theme: [e]nable_9-color_pywal [E]nable_16-color_pywal [d]isable_pywal [D]isable_pywal_and_apply_template [r]eload_mode
mode "$mode_theme" {
    bindsym e       exec $I3_SCRIPT/i3_wal_operator.sh enable_9_color_wal && notify-send -u low "Theme Mode" "Auto-theme with pywal (9-color)"
    bindsym Shift+e exec $I3_SCRIPT/i3_wal_operator.sh enable_16_color_wal && notify-send -u low "Theme Mode" "Auto-theme with pywal (16-color)"
    bindsym d       exec $I3_SCRIPT/i3_wal_operator.sh disable_wal && notify-send -u low "Theme Mode" "Disable auto-theme (kill pywal and startup pywal)"
    bindsym Shift+d exec $I3_SCRIPT/i3_wal_operator.sh disable_wal_and_apply_template && notify-send -u low "Theme Mode" "Apply template theme and disable startup pywal"
    # Reload mode
    bindsym r mode "$mode_reload"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Reload mode
set $mode_reload Reload: [r]eload_all (1~6) [1]:conky [2]:i3bar [3]:dunst [4]:xsslock [5]:zathura [6]:vis
mode "$mode_reload" {
    # Reload all
    bindsym r exec $I3_SCRIPT/i3_reload_operator.sh; mode "default"
    # Reload specific program
    bindsym 1 exec $I3_SCRIPT/i3_conky_colorchanger.sh system all && $I3_SCRIPT/i3_conky_colorchanger.sh bindkey all && notify-send -u low "Reload Mode" "Reload conky (system monitor)"
    bindsym 2 exec $I3_SCRIPT/i3_bar_operator.sh bar_reload && notify-send -u low "Reload Mode" "Reload i3bar (status bar)"
    bindsym 3 exec $I3_SCRIPT/i3_dunst_walcolor.sh reload_all && notify-send -u low "Reload Mode" "Reload dunst (notifier)"
    bindsym 4 exec $I3_SCRIPT/i3_xsslock_operator.sh current && notify-send -u low "Reload Mode" "Reload xsslock (session lock)"
    # Zathura-pywal need to be installed mannually [https://github.com/mslcarlson/zathura-pywal]
    bindsym 5 exec zathura-pywal -a 0.7 && notify-send -u low "Reload Mode" "Reload zathura (PDF viewer)"
    bindsym 6 exec $I3_SCRIPT/i3_vis_colorchanger.sh; exec notify-send -u low "Reload Mode" "Reload vis (cli-equalizer)"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Picom mode (animation, blur, and transparency support)
set $mode_picom Picom (Xcompositor): [1]:blur [2]:transparency [0]:killall_picom [s]et_default_picom
mode "$mode_picom" {
    bindsym 1 exec $I3_SCRIPT/i3_picom_operator.sh blur; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_picom_operator.sh transparency; mode "default"
    bindsym 0 exec killall picom; mode "default"
    bindsym s mode "$mode_set_default_picom"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Set default picom (within picom mode)
set $mode_set_default_picom Set default picom: [1]:blur [2]:transparency
mode "$mode_set_default_picom" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh picom blur; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh picom transparency; mode "default"
    # Back to picom mode: "Enter"
    bindsym Return mode "$mode_picom"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Flashfocus mode (flash when focus changes using picom)
set $mode_flashfocus Flashfocus (using picom): [e]nable_flashfocus [d]isable_flashfocus [r]efresh_flashfocus [s]et_default_flashfocus
mode "$mode_flashfocus" {
    # Flashfocus
    bindsym e exec flashfocus; mode "default"
    bindsym d exec killall flashfocus; mode "default"
    bindsym r exec killall flashfocus && flashfocus; mode "default"
    bindsym s mode "$mode_set_default_flashfocus"
    # Back to customization mode: "Enter"
    bindsym Return mode "$mode_customization"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Set default flashfocus (within flashfocus mode)
set $mode_set_default_flashfocus Set default flashfocus (opacity): [1]:transparency (0.6) [2]:crystal (0.7) [3]:intermediate (0.8) [4]:blur (0.9) [5]:opaque (1.0)
mode "$mode_set_default_flashfocus" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh flashfocus transparency; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh flashfocus crystal; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh flashfocus intermediate; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh flashfocus blur; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_default_valuechanger.sh flashfocus opaque; mode "default"
    # Back to flashfocus mode: "Enter"
    bindsym Return mode "$mode_flashfocus"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}
