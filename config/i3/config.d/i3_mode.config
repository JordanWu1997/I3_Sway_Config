# ~/.config/i3/config.d/i3_mode.config
# vim: syntax=i3 ft=i3 ff=unix
# ======================================================================================
# All About Modes
# ======================================================================================
# This is to save all bindkeys of modes

# --------------------------------------------------------------------------------------
# 1. Keybinding-related Modes
# --------------------------------------------------------------------------------------

# Insert mode
# Disable i3 configured keybindings. Inspired by vimium insert mode
set $mode_insert Insert: I3 bindkeys are disabled. Press Ctrl+left_bracket ([) to exit insert mode and get I3 bindkeys back
bindsym Ctrl+Mod1+i mode "$mode_insert"
bindsym Mod4+Ctrl+i mode "$mode_insert"
mode "$mode_insert" {
    bindsym Ctrl+bracketleft mode "default"
}

# Vim keybinding mode
# NOTE: xdotool must be installed, please check following link for keys available in xdotool
# -- https://gitlab.com/nokun/gestures/-/wikis/xdotool-list-of-key-codes
set $mode_vim_keybinding Vim keybindings: [h/j/k/l]:L/D/U/R [g/G]:Home/End [Ctrl+d/u]:PageDown/PageUp [d/i]:Delete/Insert [Ctrl+[]:Escape keybinding mode
bindsym Mod4+Ctrl+bracketleft mode "$mode_vim_keybinding"
mode "$mode_vim_keybinding" {
    # Navigation keys
    bindsym --release h exec xdotool key --clearmodifiers Left
    bindsym --release j exec xdotool key --clearmodifiers Down
    bindsym --release k exec xdotool key --clearmodifiers Up
    bindsym --release l exec xdotool key --clearmodifiers Right
    # Special keys
    bindsym --release g       exec xdotool key --clearmodifiers Home
    bindsym --release Shift+g exec xdotool key --clearmodifiers End
    bindsym --release d       exec xdotool key --clearmodifiers Delete
    bindsym --release i       exec xdotool key --clearmodifiers Insert
    bindsym --release Ctrl+d  exec xdotool key --clearmodifiers Page_Down
    bindsym --release Ctrl+u  exec xdotool key --clearmodifiers Page_Up
    # Composed key passthrough: [Ctrl/Alt/Ctrl+Alt] + [Left/Down/Up/Right]
    bindsym --release Mod1+h      exec xdotool key Alt_L+Left
    bindsym --release Mod1+j      exec xdotool key Alt_L+Down
    bindsym --release Mod1+k      exec xdotool key Alt_L+Up
    bindsym --release Mod1+l      exec xdotool key Alt_L+Right
    bindsym --release Ctrl+h      exec xdotool key Ctrl_L+Left
    bindsym --release Ctrl+j      exec xdotool key Ctrl_L+Down
    bindsym --release Ctrl+k      exec xdotool key Ctrl_L+Up
    bindsym --release Ctrl+l      exec xdotool key Ctrl_L+Right
    bindsym --release Ctrl+Mod1+h exec xdotool key Ctrl_L+Alt_L+Left
    bindsym --release Ctrl+Mod1+j exec xdotool key Ctrl_L+Alt_L+Down
    bindsym --release Ctrl+Mod1+k exec xdotool key Ctrl_L+Alt_L+Up
    bindsym --release Ctrl+Mod1+l exec xdotool key Ctrl_L+Alt_L+Right
    # Composed key passthrough: [Ctrl/Alt] + [Shift] + [Left/Down/Up/Right])
    bindsym --release Ctrl+Shift+h exec xdotool key Ctrl_L+Shift_L+Left
    bindsym --release Ctrl+Shift+j exec xdotool key Ctrl_L+Shift_L+Down
    bindsym --release Ctrl+Shift+k exec xdotool key Ctrl_L+Shift_L+Up
    bindsym --release Ctrl+Shift+l exec xdotool key Ctrl_L+Shift_L+Right
    bindsym --release Mod1+Shift+h exec xdotool key Alt_L+Shift_L+Left
    bindsym --release Mod1+Shift+j exec xdotool key Alt_L+Shift_L+Down
    bindsym --release Mod1+Shift+k exec xdotool key Alt_L+Shift_L+Up
    bindsym --release Mod1+Shift+l exec xdotool key Alt_L+Shift_L+Right
    # i3 keybindings compatibility: move focus between output monitors ([/,/./])
    bindsym Mod4+bracketleft  focus output up
    bindsym Mod4+bracketright focus output down
    bindsym Mod4+period       focus output right
    bindsym Mod4+comma        focus output left
    # i3 keybindings compatibility: change focus and move cursor to the center of focus window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: change focus between tiling/floating windows
    bindsym Mod4+space focus mode_toggle
    # i3 keybindings compatibility: toggle tiling/floating modes
    bindsym Mod4+Shift+space floating toggle
    # i3 keybindings compatibility: move focused window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: kill focused window
    bindsym Mod4+Shift+q kill
    # Exit mode: "Ctrl"+"[" (vim-like Escape)
    bindsym Ctrl+bracketleft mode "default"
}

# Mouse emulation by keyboard mapping
# -- https://www.reddit.com/r/i3wm/comments/ltjoaa/tip_mouse_emulation_using_hjkl/
# NOTE: xdotool must be installed
set $mode_mouse Mouse: [p]reference [m]agnifier [Ctrl/NONE/Alt/(Ctrl+Alt)+{h/j/k/l}/{[/,/./]}]:S/M/L/(XS/XL) {Move/Scroll L/D/U/R} [g/y]:Thumb 1/2 [Ctrl/NONE/Alt+u/i/o]:click&hold/click/release L/M/R
bindsym Ctrl+Mod1+m mode "$mode_mouse"
mode "$mode_mouse" {
    # Preference Mode
    bindsym p mode "$mode_cursor_preference"
    # Magnifier (NOTE: magnus must be installed)
    bindsym m exec "magnus --refresh-interval=10 --force-refresh"
    # Warp (NOTE: warpd must be installed)
    # -- https://github.com/rvaiya/warpd/?tab=readme-ov-file
    bindsym Mod1+m exec warpd --normal --config $HOME/.config/warpd/config
    # Move inside focus window
    bindsym q exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 1
    bindsym w exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 2
    bindsym e exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 3
    bindsym a exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 4
    bindsym s exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 5
    bindsym d exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 6
    bindsym z exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 7
    bindsym x exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 8
    bindsym c exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window 9
    # left down up right -- extra small steps
    bindsym Ctrl+Mod1+h exec "xdotool mousemove_relative -- -1 0"
    bindsym Ctrl+Mod1+j exec "xdotool mousemove_relative 0 1"
    bindsym Ctrl+Mod1+k exec "xdotool mousemove_relative -- 0 -1"
    bindsym Ctrl+Mod1+l exec "xdotool mousemove_relative 1 0"
    # left down up right -- small steps
    bindsym Ctrl+h exec "xdotool mousemove_relative -- -5 0"
    bindsym Ctrl+j exec "xdotool mousemove_relative 0 5"
    bindsym Ctrl+k exec "xdotool mousemove_relative -- 0 -5"
    bindsym Ctrl+l exec "xdotool mousemove_relative 5 0"
    # left down up right -- intermediate steps
    bindsym h exec "xdotool mousemove_relative -- -25 0"
    bindsym j exec "xdotool mousemove_relative 0 25"
    bindsym k exec "xdotool mousemove_relative -- 0 -25"
    bindsym l exec "xdotool mousemove_relative 25 0"
    # left down up right -- large steps
    bindsym Mod1+h exec "xdotool mousemove_relative -- -125 0"
    bindsym Mod1+j exec "xdotool mousemove_relative 0 125"
    bindsym Mod1+k exec "xdotool mousemove_relative -- 0 -125"
    bindsym Mod1+l exec "xdotool mousemove_relative 125 0"
    # click: scroll wheel up/down/left/right
    bindsym Ctrl+period       exec "xdotool click 4"
    bindsym Ctrl+comma        exec "xdotool click 5"
    bindsym Ctrl+bracketleft  exec "xdotool click 4"
    bindsym Ctrl+bracketright exec "xdotool click 5"
    # click: scroll wheel up/down/left/right -- repeat 2 times
    bindsym period       exec "xdotool click --repeat 2 4"
    bindsym comma        exec "xdotool click --repeat 2 5"
    bindsym bracketleft  exec "xdotool click --repeat 2 6"
    bindsym bracketright exec "xdotool click --repeat 2 7"
    # click: scroll wheel up/down/left/right -- repeat 10 times
    bindsym Mod1+period       exec "xdotool click --repeat 10 4"
    bindsym Mod1+comma        exec "xdotool click --repeat 10 5"
    bindsym Mod1+bracketleft  exec "xdotool click --repeat 10 6"
    bindsym Mod1+bracketright exec "xdotool click --repeat 10 7"
    # click: scroll wheel up/down/left/right -- repeat 20 times
    bindsym Ctrl+Mod1+period       exec "xdotool click --repeat 20 4"
    bindsym Ctrl+Mod1+comma        exec "xdotool click --repeat 20 5"
    bindsym Ctrl+Mod1+bracketleft  exec "xdotool click --repeat 20 6"
    bindsym Ctrl+Mod1+bracketright exec "xdotool click --repeat 20 7"
    # click-and-hold: left mid right
    bindsym Ctrl+u exec "xdotool mousedown 1"
    bindsym Ctrl+i exec "xdotool mousedown 2"
    bindsym Ctrl+o exec "xdotool mousedown 3"
    # click: left mid right
    bindsym u exec "xdotool click 1"
    bindsym i exec "xdotool click 2"
    bindsym o exec "xdotool click 3"
    # release: left mid right
    bindsym Mod1+u exec "xdotool mouseup 1"
    bindsym Mod1+i exec "xdotool mouseup 2"
    bindsym Mod1+o exec "xdotool mouseup 3"
    # click-and-hold: Shift+left/mid/right
    bindsym --release Ctrl+Shift+u exec "xdotool keydown Shift_L mousedown 1"
    bindsym --release Ctrl+Shift+i exec "xdotool keydown Shift_L mousedown 2"
    bindsym --release Ctrl+Shift+o exec "xdotool keydown Shift_L mousedown 3"
    # release: Shift+left/mid/right
    bindsym --release Mod1+Shift+u exec "xdotool --clearmodifiers keyup Shift_L mouseup 1"
    bindsym --release Mod1+Shift+i exec "xdotool --clearmodifiers keyup Shift_L mouseup 2"
    bindsym --release Mod1+Shift+o exec "xdotool --clearmodifiers keyup Shift_L mouseup 3"
    # click: thumb button 1/2
    bindsym g exec "xdotool click 8"
    bindsym y exec "xdotool click 9"
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # i3 keybindings compatibility: title bar toggle
    bindsym Mod4+t border toggle $default_border_width
    # i3 keybindings compatibility: toggle stickiness of floating window
    bindsym Mod4+Shift+s exec $I3_SCRIPT/i3_window_operator.sh toggle_sticky_current; exec flash_window
    # i3 keybindings compatibility: fullscreen
    bindsym Mod4+f       fullscreen toggle
    bindsym Mod4+Shift+f fullscreen toggle global
    bindsym Ctrl+Mod1+f exec $I3_SCRIPT/i3_window_operator.sh float_then_fullscreen
    # i3 keybindings compatibility: cycle window focus with automarks
    bindsym Mod4+n exec $I3_SCRIPT/i3_automark_operator.sh cycle_focus_inc
    bindsym Mod4+i exec $I3_SCRIPT/i3_automark_operator.sh cycle_focus_dec
    # i3 keybindings compatibility: swap window with automarks
    bindsym Mod4+Shift+n exec $I3_SCRIPT/i3_automark_operator.sh cycle_swap_inc
    bindsym Mod4+Shift+i exec $I3_SCRIPT/i3_automark_operator.sh cycle_swap_dec
    # i3 keybindings compatibility: mouse button actions
    bindsym Mod4+o floating toggle
    # i3 keybindings compatibility: change focus and move cursor to the center of focus window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: move focused window
    bindsym Mod4+Shift+h move left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+Shift+j move down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+Shift+k move up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+Shift+l move right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: move focus between output monitors (,/[/]/.)
    bindsym Mod4+comma        focus output left
    bindsym Mod4+bracketleft  focus output down
    bindsym Mod4+bracketright focus output up
    bindsym Mod4+period       focus output right
    # i3 keybindings compatibility: move window and focus between output monitors (</{/}/>)
    bindsym Mod4+Shift+comma        move container to output left; focus output left
    bindsym Mod4+Shift+bracketleft  move container to output down; focus output down
    bindsym Mod4+Shift+bracketright move container to output up; focus output up
    bindsym Mod4+Shift+period       move container to output right; focus output right
    # i3 keybindings compatibility: scratchpad
    bindsym Mod4+minus move scratchpad
    bindsym Mod4+plus  scratchpad show
    # i3 keybindings compatibility: scratchpad
    bindsym Mod4+z move scratchpad
    bindsym Mod4+g scratchpad show
    # i3 keybindings compatibility: change focus between tiling/floating windows
    bindsym Mod4+space focus mode_toggle
    # i3 keybindings compatibility: toggle tiling/floating
    bindsym Mod4+Shift+space floating toggle
    # i3 keybindings compatibility: kill focused window
    bindsym Mod4+Shift+q kill
    # Exit mode: "Enter", "Escape", or "Ctrl+Alt+m" (mode bindkey), or "Alt+m" (for HHKB)
    bindsym Return      mode "default"
    bindsym Escape      mode "default"
    bindsym Ctrl+Mod1+m mode "default"
}

# Cursor preference mode (within mouse mode)
# NOTE: unclutter must be installed
set $mode_cursor_preference Cursor: [1/2]:auto-hiding (unclutter) on/off [3/4]:set auto-hiding/no-auto-hiding_as_default [5/6]:focus_follows_mouse on/off [7/8]:mouse_follows_focus on/off
mode "$mode_cursor_preference" {
    # Cursor autohide [unclutter-xfixes need to be installed]
    bindsym 1 exec $I3_SCRIPT/i3_cursor_operator.sh enable_unclutter; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_cursor_operator.sh disable_unclutter; mode "$mode_mouse"
    bindsym 3 exec $I3_SCRIPT/i3_cursor_operator.sh set_unclutter_as_default; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_cursor_operator.sh set_no_unclutter_as_default; mode "$mode_mouse"
    bindsym 5 exec $I3_SCRIPT/i3_cursor_operator.sh enable_focus_follows_mouse; mode "default"
    bindsym 6 exec $I3_SCRIPT/i3_cursor_operator.sh disable_focus_follows_mouse; mode "default"
    bindsym 7 exec $I3_SCRIPT/i3_cursor_operator.sh enable_mouse_follows_focus; mode "default"
    bindsym 8 exec $I3_SCRIPT/i3_cursor_operator.sh disable_mouse_follows_focus; mode "default"
    # Back to mouse mode: "Enter"
    bindsym Return mode "$mode_mouse"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# --------------------------------------------------------------------------------------
# 2. System-related Modes
# --------------------------------------------------------------------------------------

# System mode
set $mode_system System: [b]luetooth [n]etwork [r]f_device [t]erminal [R]eboot [P]oweroff [S]uspend [H]ibernate [E]xit [(Shift)+l]:lock (and_turn_off_screen)
bindsym Ctrl+Mod1+s      mode "$mode_system"
bindsym Ctrl+Mod1+Delete mode "$mode_system"
mode "$mode_system" {
    # RF device mode
    bindsym r mode "$mode_RF_device"
    # Bluetooth mode
    bindsym b mode "$mode_bluetooth"
    # Network mode
    bindsym n mode "$mode_network"
    # Terminal mode
    bindsym t mode "$mode_terminal"
    # System
    bindsym Shift+r exec systemctl reboot; mode "default"
    bindsym Shift+p exec systemctl poweroff; mode "default"
    bindsym Shift+s exec systemctl suspend; mode "default"
    bindsym Shift+h exec systemctl hibernate; mode "default"
    bindsym Shift+e exec i3-msg exit; mode "default"
    # Lock (with xss-lock daemon)
    bindsym l       exec loginctl lock-session; mode "default"
    bindsym Shift+l exec loginctl lock-session && sleep 1 && xset dpms force off; mode "default"
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# RF mode (within system mode)
set $mode_RF_device RF_device: [1/2]:enable/disable RF_device
mode "$mode_RF_device" {
    # RF device control
    bindsym 1 exec $I3_SCRIPT/i3_RF_device_operator.sh enable_RF_device; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_RF_device_operator.sh disable_RF_device; mode "default"
    # Back to system mode: "Enter"
    bindsym Return mode "$mode_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Network mode (within system mode)
set $mode_network Network: [1/2]:conenct/disconnect network_connection
mode "$mode_network" {
    # Network connection control
    bindsym 1 exec $I3_SCRIPT/i3_toolkit_operator.sh connection_up; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_toolkit_operator.sh connection_down; mode "default"
    # Back to system mode: "Enter"
    bindsym Return mode "$mode_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Bluetooth mode (within system mode)
set $mode_bluetooth Bluetooth: [1/2]:connect/disconnect bluetooth_device [3/4]:enable/disable discoverable
mode "$mode_bluetooth" {
    # Bluetooth device control
    bindsym 1 exec $I3_SCRIPT/i3_RF_device_operator.sh connect_bluetooth_device; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_RF_device_operator.sh disconnect_bluetooth_device; mode "default"
    # Bluetooth discoverable
    bindsym 3 exec $I3_SCRIPT/i3_RF_device_operator.sh enable_bluetooth_discoverability
    bindsym 4 exec $I3_SCRIPT/i3_RF_device_operator.sh disable_bluetooth_discoverability
    # Back to system mode: "Enter"
    bindsym Return mode "$mode_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Terminal mode (within system mode)
set $mode_terminal Terminal: [1]:gnome-terminal [2]:kitty [3]:alacritty [4]:rxvt-unicode [5]:xterm [0]:i3-sensible-terminal [s]et_i3_default_terminal
mode "$mode_terminal" {
    # Open terminal
    bindsym 1 exec gnome-terminal;mode "default"
    bindsym 2 exec kitty;mode "default"
    bindsym 3 exec alacritty;mode "default"
    bindsym 4 exec urxvt; mode "default"
    bindsym 5 exec xterm;mode "default"
    bindsym 0 exec i3-sensible-terminal ;mode "default"
    # Set default terminal
    bindsym s exec $I3_SCRIPT/i3_terminal_operator.sh set_default_terminal
    # Back to system mode: "Enter"
    bindsym Return mode "$mode_system"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# X Toolkit mode
set $mode_toolkit X Toolkit: [c]affeine [k]eyboard [K]deconnect [f]lameshot [r]ecording [1]:pick_color [2]:get_screenshot_text [3]:collect_all_instances [4]:kill_window [5]:reload_parcellite [6]:toggle_oneko [7]:show_brave_browser
bindsym Mod1+Ctrl+t mode "$mode_toolkit"
mode "$mode_toolkit" {
    # Caffeine mode
    bindsym c mode "$mode_caffeine"
    # Keyboard mode
    bindsym k mode "$mode_keyboard"
    # Kdeconnect mode
    bindsym Shift+k mode "$mode_kdeconnect"
    # Flameshot mode
    bindsym f mode "$mode_flameshot"
    # Recording mode (screen recording tool collection)
    bindsym r mode "$mode_recording"
    # Pickup color (requires xcolor, and xclip)
    bindsym --release 1 exec $I3_SCRIPT/i3_toolkit_operator.sh pickup_color; mode "default"
    # Extract context from screenshot and copy to clipboard (requires flameshot, tesseract, and xclip)
    bindsym 2 exec $I3_SCRIPT/i3_toolkit_operator.sh get_screenshot_text; mode "default"
    # Collect all instance of window
    bindsym 3 exec $I3_SCRIPT/i3_toolkit_operator.sh collect_all_instances; mode "default"
    # Click window to kill
    bindsym --release 4 exec $I3_SCRIPT/i3_toolkit_operator.sh kill_window; mode "default"
    # Reload parcellite (clipboard manager)
    bindsym 5 exec $I3_SCRIPT/i3_toolkit_operator.sh reload_parcellite; mode "default"
    # Toggle oneko
    bindsym 6 exec $I3_SCRIPT/i3_toolkit_operator.sh toggle_oneko; mode "default"
    # Show brave-browsers
    bindsym 7 exec $I3_SCRIPT/i3_toolkit_operator.sh show_brave_browser; mode "default"
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Caffeine mode (within toolkit mode)
set $mode_caffeine Caffeine: [1]:enable_caffeine [2]:disable_caffeine
mode "$mode_caffeine" {
    # Caffeine (disable/enable X window screen saver)
    bindsym 1 exec $I3_SCRIPT/i3_toolkit_operator.sh enable_caffeine; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_toolkit_operator.sh disable_caffeine; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_toolkit"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Keyboard mode (within toolkit mode)
set $mode_keyboard Keyboard: [n]on-hhkb [h]hkb [t]ex [r]estore_keyboard_layout [Ctrl+Alt+l/n]:Send CapsLock/NumLock [1/2]:Speed-up/Reset repeat key rate [0]:default
mode "$mode_keyboard" {
    # Send Capslock key
    bindsym Ctrl+Mod1+l exec $I3_SCRIPT/i3_keyboard_operator.sh send_capslock_key
    bindsym Ctrl+Mod1+n exec $I3_SCRIPT/i3_keyboard_operator.sh send_numlock_key
    # Repeat key
    bindsym 1 exec $I3_SCRIPT/i3_keyboard_operator.sh speed_up_repeat_key_rate; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_keyboard_operator.sh restore_repeat_key_rate; mode "default"
    # Default: Speedup repeat key, map capslock key to ctrl, customize TEX shinobi keyboard, and etc.
    bindsym 0 exec $I3_SCRIPT/i3_keyboard_operator.sh default; mode "default"
    # Restore keyboard layout
    bindsym r exec $I3_SCRIPT/i3_keyboard_operator.sh restore_keyboard_layout; mode "default"
    # non-HHKB mode
    bindsym n mode $mode_non_HHKB
    # HHKB mode
    bindsym h mode $mode_HHKB
    # TEX mode
    bindsym t mode $mode_TEX
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_toolkit"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Flameshot mode (within toolkit mode)
set $mode_flameshot Flameshot (prepend [Shift] to hide titlebar/border): [1]:select_window [2]:active_window [3]:current_screen [4]:full (all screens) [0]:flameshot_GUI
mode "$mode_flameshot" {
    # Show titlebar/border
    bindsym 0 exec $I3_SCRIPT/i3_flameshot_operator.sh GUI show; mode "default"
    bindsym --release 1 exec $I3_SCRIPT/i3_flameshot_operator.sh select_window show; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_flameshot_operator.sh active_window show; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_flameshot_operator.sh current_screen show; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_flameshot_operator.sh full show; mode "default"
    # Hide titlebar/border
    bindsym Shift+0 exec $I3_SCRIPT/i3_flameshot_operator.sh GUI hide; mode "default"
    bindsym --release Shift+1 exec $I3_SCRIPT/i3_flameshot_operator.sh select_window hide; mode "default"
    bindsym Shift+2 exec $I3_SCRIPT/i3_flameshot_operator.sh active_window hide; mode "default"
    bindsym Shift+3 exec $I3_SCRIPT/i3_flameshot_operator.sh current_screen hide; mode "default"
    bindsym Shift+4 exec $I3_SCRIPT/i3_flameshot_operator.sh full hide; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_toolkit"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Recording mode (within toolkit mode)
set $mode_recording Recording Tool: [1]:peek (Ctrl+Alt+Shift+r to start/stop recording) [2]:screenkey
mode "$mode_recording" {
    bindsym 1 exec --no-startup-id peek; mode "default"
    bindsym 2 exec --no-startup-id screenkey; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_toolkit"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# non-HHKB mode (within keyboard mode)
set $mode_non_HHKB non-HHKB: [1/2]:Map/Swap Capslock to/with Ctrl [3/4]:Swap/Restore Backslash with/and Backspace [0]:Restore Capslock
mode "$mode_non_HHKB" {
    # Capslock key
    bindsym 0 exec $I3_SCRIPT/i3_keyboard_operator.sh restore_capslock; mode "default"
    bindsym 1 exec $I3_SCRIPT/i3_keyboard_operator.sh map_capslock_to_ctrl; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_keyboard_operator.sh swap_capslock_with_ctrl; mode "default"
    # Backspace key and Backslash key
    bindsym 3 exec $I3_SCRIPT/i3_keyboard_operator.sh swap_backslash_with_backspace; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_keyboard_operator.sh restore_backslash_and_backspace; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_keyboard"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# HHKB mode (within keyboard mode)
set $mode_HHKB HHKB: [1/2]:Swap/Restore Esc with/and Grave [3]:Map Shift+Esc to Tilde (Shift+Grave) [0]:Swap ^Esc KBs with ^Grave KBs
mode "$mode_HHKB" {
    bindsym 1 exec $I3_SCRIPT/i3_keyboard_operator.sh swap_escape_with_grave; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_keyboard_operator.sh restore_escape_and_grave; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_keyboard_operator.sh map_shift_escape_to_tilde; mode "default"
    # Swap Escape-related keybindings to grave-related keybindings for HHKB layout
    bindsym 0 exec $I3_SCRIPT/i3_keyboard_operator.sh swap_escape_keybinding_with_grave_keybinding; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_keyboard"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape          mode "default"
    bindsym Ctrl+brcketleft mode "default"
}

# TEX mode (within keyboard mode)
set $mode_TEX TEX: [1/2]:Customize/Restore TEX Shinobi [3/4]:Enable/Disable Trackpoint
mode "$mode_TEX" {
    # TEX Shinobi keyboard trackpoint
    bindsym 1 exec $I3_SCRIPT/i3_keyboard_operator.sh customize_tex_shinobi; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_keyboard_operator.sh restore_tex_shinobi; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_keyboard_operator.sh enable_tex_shinobi_trackpoint; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_keyboard_operator.sh disable_tex_shinobi_trackpoint; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_keyboard"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# KDE Connect mode (within toolkit mode)
set $mode_kdeconnect KDE Connect: [1/2]:kdeconnect_pointer_daemon on/off [3/4]:invert_pointer_color on/off
mode "$mode_kdeconnect" {
    # KDE Connect pointer daemon
    bindsym 1 exec $I3_SCRIPT/i3_kdeconnect_operator.sh enable_pointer; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_kdeconnect_operator.sh disable_pointer; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_kdeconnect_operator.sh pointer_invert_on; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_kdeconnect_operator.sh pointer_invert_off; mode "default"
    # Back to toolkit mode: "Enter"
    bindsym Return mode "$mode_toolkit"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Display mode (use xrandr)
set $mode_display Display: [a]randr [p]reset [x]:display_layout [1]:position [2]:mode [3]:primary [4]:orientation [5]:scale
bindsym Mod4+Shift+x mode "$mode_display"
mode "$mode_display" {
    # Arandr (xrandr GUI)
    bindsym a exec arandr; mode "default"
    # Preset display
    bindsym p mode "$mode_display_preset"
    # Interactive select display to operate
    bindsym 1 exec $I3_SCRIPT/i3_display_operator.sh select_display_position
    bindsym 2 exec $I3_SCRIPT/i3_display_operator.sh select_display_mode
    bindsym 3 exec $I3_SCRIPT/i3_display_operator.sh select_display_as_primary
    bindsym 4 exec $I3_SCRIPT/i3_display_operator.sh select_display_orientation
    bindsym 5 exec $I3_SCRIPT/i3_display_operator.sh select_display_scale
    # Show display layout
    bindsym x exec $I3_SCRIPT/i3_display_operator.sh show_display_layout
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Display preset mode (within display mode)
# -- https://thevaluable.dev/i3-config-mouseless/
# -- For my monitor physical setup: laptop [eDP1 13'] + external {[HDMI1 27'], [HDMI1 24']}
set $mode_display_preset Display Preset: [e]:eDP1 [h]:HDMI1 [1]:auto_in_office [2]:auto_at_home [3/4]:Joint (HDMI1+eDP1/eDP1+HDMI1) [5]:Mirror (eDP1&HDMI) [0]:auto
mode "$mode_display_preset" {
    # Monitor mode
    bindsym e mode "$mode_eDP1"
    bindsym h mode "$mode_HDMI1"
    # Preset
    bindsym 0 exec $I3_SCRIPT/i3_display_operator.sh auto $default_conky_startup; mode "default"
    bindsym 1 exec $I3_SCRIPT/i3_display_operator.sh auto_in_office $default_conky_startup; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_display_operator.sh auto_at_home $default_conky_startup; mode "default"
    # Joint, Mirror
    bindsym 3 exec $I3_SCRIPT/i3_display_operator.sh HDMI1_eDP1_joint $default_conky_startup; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_display_operator.sh eDP1_HDMI1_joint $default_conky_startup; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_display_operator.sh eDP1_HDMI1_mirror $default_conky_startup; mode "default"
    # Back to display mode: "Enter"
    bindsym Return mode "$mode_display"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# eDP1 mode (within display mode)
set $mode_eDP1 eDP1: [a]uto [o]ff [p]rimary [1]:1440x810 [2]:1368x768 [0]:1920x1080
mode "$mode_eDP1" {
    # Resolution
    bindsym 1 exec $I3_SCRIPT/i3_display_operator.sh eDP1_shrink1 $default_conky_startup; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_display_operator.sh eDP1_shrink2 $default_conky_startup; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_display_operator.sh eDP1_default $default_conky_startup; mode "default"
    # Misc
    bindsym a exec $I3_SCRIPT/i3_display_operator.sh eDP1_auto disable; mode "default"
    bindsym o exec $I3_SCRIPT/i3_display_operator.sh eDP1_off disable; mode "default"
    bindsym p exec $I3_SCRIPT/i3_display_operator.sh eDP1_primary disable; mode "default"
    # Back to display mode: "Enter"
    bindsym Return mode "$mode_display_preset"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# HDMI1 mode (within display mode)
set $mode_HDMI1 HDMI1: [a]uto [o]ff [p]rimary [1]:1912x960 [2]:1920x1200 [0]:1920x1080
mode "$mode_HDMI1" {
    # Resolution
    bindsym 1 exec $I3_SCRIPT/i3_display_operator.sh HDMI1_shrink $default_conky_startup; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_display_operator.sh HDMI1_extend $default_conky_startup; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_display_operator.sh HDMI1_default $default_conky_startup; mode "default"
    # Misc
    bindsym a exec $I3_SCRIPT/i3_display_operator.sh HDMI1_auto disable; mode "default"
    bindsym o exec $I3_SCRIPT/i3_display_operator.sh HDMI1_off disable; mode "default"
    bindsym p exec $I3_SCRIPT/i3_display_operator.sh HDMI1_primary disable; mode "default"
    # Back to display mode: "Enter"
    bindsym Return mode "$mode_display_preset"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Backlight mode
# NOTE: xbacklight must be installed
set $mode_backlight Backlight: [r/z]:redshift [(Shift)+i]:input [(Shift)+x]:xbacklight [Ctrl/NONE/Alt+-/+]:1%/5%/10% decrease/increase [Ctrl/(Ctrl+Alt)/Alt+Shift+0]:set to 0.1%/50%/100%
bindsym Ctrl+Mod1+x mode "$mode_backlight"
mode "$mode_backlight" {
    # Redshift mode
    bindsym r mode "$mode_redshift"
    bindsym z mode "$mode_redshift"
    # xrandr input
    bindsym i       exec $I3_SCRIPT/i3_backlight_operator.sh set_focused_display_backlight_with_rofi
    bindsym Shift+i exec $I3_SCRIPT/i3_backlight_operator.sh set_all_connected_displays_backlight_with_rofi
    # xbacklight
    bindsym x       exec $I3_SCRIPT/i3_backlight_operator.sh show_xbacklight
    bindsym Shift+x exec $I3_SCRIPT/i3_backlight_operator.sh set_xbacklight_with_rofi
    # Backlight (small/intermediate/large step)
    bindsym Ctrl+minus exec $I3_SCRIPT/i3_backlight_operator.sh dec_xbacklight 1
    bindsym Ctrl+plus  exec $I3_SCRIPT/i3_backlight_operator.sh inc_xbacklight 1
    bindsym minus      exec $I3_SCRIPT/i3_backlight_operator.sh dec_xbacklight 5
    bindsym plus       exec $I3_SCRIPT/i3_backlight_operator.sh inc_xbacklight 5
    bindsym Mod1+minus exec $I3_SCRIPT/i3_backlight_operator.sh dec_xbacklight 10
    bindsym Mod1+plus  exec $I3_SCRIPT/i3_backlight_operator.sh inc_xbacklight 10
    # Backlight (Min/Intermediate/Max)
    bindsym Ctrl+Shift+0      exec $I3_SCRIPT/i3_backlight_operator.sh set_xbacklight 0.1
    bindsym Ctrl+Mod1+Shift+0 exec $I3_SCRIPT/i3_backlight_operator.sh set_xbacklight 50.1
    bindsym Mod1+Shift+0      exec $I3_SCRIPT/i3_backlight_operator.sh set_xbacklight 100.0
    # Special key compatibility: backlight control
    bindsym Ctrl+XF86MonBrightnessDown exec $I3_SCRIPT/i3_backlight_operator.sh dec_xbacklight 1
    bindsym Ctrl+XF86MonBrightnessUp   exec $I3_SCRIPT/i3_backlight_operator.sh inc_xbacklight 1
    bindsym XF86MonBrightnessDown      exec $I3_SCRIPT/i3_backlight_operator.sh dec_xbacklight 5
    bindsym XF86MonBrightnessUp        exec $I3_SCRIPT/i3_backlight_operator.sh inc_xbacklight 5
    bindsym Mod1+XF86MonBrightnessDown exec $I3_SCRIPT/i3_backlight_operator.sh dec_xbacklight 10
    bindsym Mod1+XF86MonBrightnessUp   exec $I3_SCRIPT/i3_backlight_operator.sh inc_xbacklight 10
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Compatibility: Move focus between output monitors (,/[/]/.)
    bindsym Mod4+comma        focus output left
    bindsym Mod4+bracketleft  focus output down
    bindsym Mod4+bracketright focus output up
    bindsym Mod4+period       focus output right
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Redshift mode (bluelight filter within backlight mode)
# -- https://confluence.jaytaala.com/display/TKB/Redshift+on+i3wm
# NOTE: redshift must be installed
set $mode_redshift Redshift (bluelight filter): [i]nput [1]:2000K [2]:2500K [3]:3000K [4]:3500K [5]:4000K [6]:4500K [7]:5000K [8]:5500K [9]:6000K [0]:killall_reshift
mode "$mode_redshift" {
    bindsym 1 exec redshift -m randr -P -O 2000
    bindsym 2 exec redshift -m randr -P -O 2500
    bindsym 3 exec redshift -m randr -P -O 3000
    bindsym 4 exec redshift -m randr -P -O 3500
    bindsym 5 exec redshift -m randr -P -O 4000
    bindsym 6 exec redshift -m randr -P -O 4500
    bindsym 7 exec redshift -m randr -P -O 5000
    bindsym 8 exec redshift -m randr -P -O 5500
    bindsym 9 exec redshift -m randr -P -O 6000
    # Input
    bindsym i exec redshift -m randr -P -O $(rofi -dmenu -p "Set color_temperature to")
    # Disable redshift
    bindsym 0 exec redshift -m randr -P -x; mode "default"
    # Go to backlight mode: "Enter"
    bindsym Return mode "$mode_backlight"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Dunst mode (notification daemon)
# NOTE: dunst must be installed
set $mode_dunst Dunst (notification daemon): [l]ogger [(Shift)+c]:close (all) notification [o]pen_context [h]istory-pop [s]tatus [p]ause_dunst [r]esume_dunst [R]eload_dunst
bindsym Ctrl+Mod1+n mode "$mode_dunst"
mode "$mode_dunst" {
    # Dunst logger mode
    bindsym l mode "$mode_dunst_logger"
    # Dunst operation
    bindsym s       exec notify-send "Dunst" "Dunst is running"
    bindsym a       exec dunstctl action
    bindsym c       exec dunstctl close
    bindsym o       exec dunstctl context
    bindsym h       exec dunstctl history-pop
    bindsym Shift+c exec dunstctl close-all
    bindsym p       exec dunstctl set-paused true; mode "default"
    bindsym r       exec dunstctl set-paused false
    bindsym Shift+r exec $I3_SCRIPT/i3_dunst_operator.sh reload
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Dunst logger mode (within dunst mode)
set $mode_dunst_logger Logger: [s]tatus [h]istory [e]nable_logger [d]isable_logger
mode "$mode_dunst_logger" {
    bindsym s exec $I3_SCRIPT/i3_dunst_operator.sh show_dunst_logger_status
    bindsym h exec $I3_SCRIPT/i3_dunst_operator.sh show_dunst_logger_history
    bindsym e exec $I3_SCRIPT/i3_dunst_operator.sh enable_dunst_logger; mode "default"
    bindsym d exec $I3_SCRIPT/i3_dunst_operator.sh disable_dunst_logger; mode "default"
    # Go back to dunst mode: "Enter"
    bindsym Return mode "$mode_dunst"
    # "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# --------------------------------------------------------------------------------------
# 3. Multimedia-related Modes
# --------------------------------------------------------------------------------------

# Player mode with youtube-like player control (j/k/l: previous/play-pause/next)
# NOTE: spotifyd, spt, mpv must be installed. Also need mpv-mpris to control mpv with playerctl
bindsym Ctrl+Mod1+p mode "$mode_player"
set $mode_player Player: [i]nput [o]utput [s]potifyd [M]pv [P/p]laying [{Ctrl+Alt}/Ctrl/NONE/Alt+(Shift)+j/k/l]:{selector}/spotify/current/mpv|vlc (prev)/-10s/(stop)/play-pause/(next)/+10s [Ctrl+Alt+Shift+Space]:stop all
mode "$mode_player" {
    # Audio input mode (with pulsemixer)
    bindsym i mode "$mode_audio_input"
    # Audio output mode (with pulsemixer)
    bindsym o mode "$mode_audio_output"
    # Spotifyd mode
    bindsym s mode "$mode_spotifyd"
    # Mpv mode (provides function like selecting playlist interactively )
    bindsym Shift+m mode "$mode_mpv"
    # Show playing information
    bindsym p       exec $I3_SCRIPT/i3_MPRIS_notification.sh playing
    bindsym Shift+p exec $I3_SCRIPT/i3_MPRIS_notification.sh playing_all
    bindsym Mod1+p  exec $I3_SCRIPT/i3_MPRIS_notification.sh read_playing
    # Spt (spotify TUI front-end)
    bindsym Ctrl+j       exec spt playback --seek -10
    bindsym Ctrl+k       exec spt playback --toggle
    bindsym Ctrl+l       exec spt playback --seek +10
    bindsym Ctrl+Shift+j exec playerctl -p $(spt playback -f %d) previous
    bindsym Ctrl+Shift+k exec playerctl -p $(spt playback -f %d) stop
    bindsym Ctrl+Shift+l exec playerctl -p $(spt playback -f %d) next
    # Media player control
    bindsym j       exec playerctl position 10-
    bindsym k       exec playerctl play-pause && $I3_SCRIPT/i3_MPRIS_notification.sh playing
    bindsym l       exec playerctl position 10+
    bindsym Shift+j exec playerctl previous && sleep 1.5 && $I3_SCRIPT/i3_MPRIS_notification.sh playing
    bindsym Shift+k exec playerctl stop
    bindsym Shift+l exec playerctl next && sleep 1.5 && $I3_SCRIPT/i3_MPRIS_notification.sh playing
    # MPV/VLC (multimedia player), where mpv has higher priority
    bindsym Mod1+j       exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" position 10-
    bindsym Mod1+k       exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" play-pause
    bindsym Mod1+l       exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" position 10+
    bindsym Mod1+Shift+j exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" previous
    bindsym Mod1+Shift+k exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" stop
    bindsym Mod1+Shift+l exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" next
    # Interactive media player control
    bindsym Ctrl+Mod1+j       exec $I3_SCRIPT/i3_MPRIS_operator.sh rewind
    bindsym Ctrl+Mod1+k       exec $I3_SCRIPT/i3_MPRIS_operator.sh play-pause
    bindsym Ctrl+Mod1+l       exec $I3_SCRIPT/i3_MPRIS_operator.sh fast-forward
    bindsym Ctrl+Mod1+Shift+j exec $I3_SCRIPT/i3_MPRIS_operator.sh prev
    bindsym Ctrl+Mod1+Shift+k exec $I3_SCRIPT/i3_MPRIS_operator.sh stop
    bindsym Ctrl+Mod1+Shift+l exec $I3_SCRIPT/i3_MPRIS_operator.sh next
    # Stop all media players
    bindsym Ctrl+Mod1+Shift+space exec playerctl stop --all-players
    # Specital key compatibility: media player control
    bindsym XF86AudioPlay        exec playerctl play-pause && $I3_SCRIPT/i3_MPRIS_notification.sh
    bindsym XF86AudioPause       exec playerctl play-pause && $I3_SCRIPT/i3_MPRIS_notification.sh
    bindsym Shift+XF86AudioPause exec playerctl stop
    bindsym XF86AudioStop        exec playerctl stop
    bindsym XF86AudioNext        exec playerctl next && sleep 1.5 && $I3_SCRIPT/i3_MPRIS_notification.sh
    bindsym XF86AudioPrev        exec playerctl previous && sleep 1.5 && $I3_SCRIPT/i3_MPRIS_notification.sh
    # Specital key compatibility: media player control for spotify (requires spt)
    bindsym Ctrl+XF86AudioPlay  exec playerctl -p $(spt playback -f %d) play-pause
    bindsym Ctrl+XF86AudioPause exec playerctl -p $(spt playback -f %d) play-pause
    bindsym Ctrl+XF86AudioStop  exec playerctl -p $(spt playback -f %d) stop
    bindsym Ctrl+XF86AudioNext  exec playerctl -p $(spt playback -f %d) next
    bindsym Ctrl+XF86AudioPrev  exec playerctl -p $(spt playback -f %d) previous
    # Specital key compatibility: media player control for MPV/VLC (requires mpv/vlc)
    bindsym Mod1+XF86AudioPlay  exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" play-pause
    bindsym Mod1+XF86AudioPause exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" play-pause
    bindsym Mod1+XF86AudioStop  exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" stop
    bindsym Mod1+XF86AudioNext  exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" next
    bindsym Mod1+XF86AudioPrev  exec playerctl -p "$(playerctl -l | grep -q mpv && echo mpv || echo vlc)" previous
    # Specital key compatibility: media player control for all players
    bindsym Ctrl+Mod1+XF86AudioPlay       exec playerctl -a play-pause
    bindsym Ctrl+Mod1+Shift+XF86AudioPlay exec playerctl -a stop
    bindsym Ctrl+Mod1+XF86AudioStop       exec playerctl -a stop
    # Special key compatibility: volume adjustment
    bindsym XF86AudioMicMute          exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym XF86AudioMute             exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym XF86AudioRaiseVolume      exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym XF86AudioLowerVolume      exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +10% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -10% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    # i3 keybindings compatibility: kill focused window
    bindsym Mod4+Shift+q kill
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    #bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Spotifyd mode (within player mode)
# NOTE: spotifyd must be installed
set $mode_spotifyd Spotifyd: [p]laying [s]tatus [e]nable [d]isable [a]ttach_spotifyd_to_spt [r]eload [R]eload_attach_spotifyd_to_spt [1/2]:repeat track/all
mode "$mode_spotifyd" {
    bindsym p       exec $I3_SCRIPT/i3_spotifyd_operator.sh playing
    bindsym s       exec $I3_SCRIPT/i3_spotifyd_operator.sh status
    bindsym e       exec $I3_SCRIPT/i3_spotifyd_operator.sh enable
    bindsym d       exec $I3_SCRIPT/i3_spotifyd_operator.sh disable
    bindsym a       exec $I3_SCRIPT/i3_spotifyd_operator.sh attach
    bindsym r       exec $I3_SCRIPT/i3_spotifyd_operator.sh reload
    bindsym Shift+r exec $I3_SCRIPT/i3_spotifyd_operator.sh reload_and_attach
    # Track repeat with spt
    bindsym 1 exec $I3_SCRIPT/i3_spotifyd_operator.sh enable_track_repeat
    bindsym 2 exec $I3_SCRIPT/i3_spotifyd_operator.sh disable_track_repeat
    # Go to player mode: "Enter"
    bindsym Return mode "$mode_player"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Mpv mode (within player mode)
# NOTE: mpv must be installed
set $mode_mpv Mpv: [p]laylist
mode "$mode_mpv" {
    bindsym p exec find ~/.config/mpv/playlists -type f | rofi -dmenu | xargs -I {} mpv --playlist="{}"
    # Go to player mode: "Enter"
    bindsym Return mode "$mode_player"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Audio output mode (within player mode; for speaker, earphones and etc.)
# NOTE: pulsemixer, alsa-utils must be installed
set $mode_audio_output Audio Output: [s]et_volume [v]olume [p]ulsemixer [a]lsamixer [c]heck_speaker [m]ute_toggle [Ctrl/NONE/Alt+-/+]:1%/5%/10% decrease/increase
mode "$mode_audio_output" {
    # Set volume
    bindsym s exec pulsemixer --set-volume $(rofi -dmenu -p "Set output volume to") && $I3_SCRIPT/i3_pulseaudio_notification.sh
    # Show volume
    bindsym v exec $I3_SCRIPT/i3_pulseaudio_notification.sh
    # Pulsemixer (CLI and curses mixer for PulseAudio)
    bindsym p exec --no-startup-id kitty --class floating_terminal -e pulsemixer; mode "default"
    # Alsamixer (soundcard mixer for ALSA soundcard driver)
    bindsym a exec --no-startup-id kitty --class floating_terminal -e alsamixer; mode "default"
    # Stereo channel check (default: 2 channels)
    bindsym c exec --no-startup-id kitty --class floating_terminal -e speaker-test -t wav -c 2
    # Toggle mute
    bindsym m exec pulsemixer --toggle-mute && $I3_SCRIPT/i3_pulseaudio_notification.sh
    # Volume (small/intermediate/large step)
    bindsym Ctrl+minus exec pulsemixer --change-volume -1 && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+plus  exec pulsemixer --change-volume +1 && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym minus      exec pulsemixer --change-volume -5 && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym plus       exec pulsemixer --change-volume +5 && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+minus exec pulsemixer --change-volume -10 && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+plus  exec pulsemixer --change-volume +10 && $I3_SCRIPT/i3_pulseaudio_notification.sh
    # Special key compatibility: volume adjustment
    bindsym XF86AudioMicMute          exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym XF86AudioMute             exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym XF86AudioRaiseVolume      exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym XF86AudioLowerVolume      exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +10% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -10% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Go to audio input mode
    bindsym i mode "$mode_audio_input"
    # Go to player mode: "Enter"
    bindsym Return mode "$mode_player"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Audio input mode (within player mode; for microphone and etc.)
# NOTE: pulsemixer, alsa-utils must be installed
set $mode_audio_input Audio Input: [s]et_volume [v]olume [p]ulsemixer [a]lsamixer [c]heck_microphone [r]ecord [m]ute_toggle [Ctrl/NONE/Alt+-/+]:1%/5%/10% decrease/increase
mode "$mode_audio_input" {
    # Set volume
    bindsym s exec pactl set-source-volume @DEFAULT_SOURCE@ $(rofi -dmenu -p "Set input volume to")% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    # Show volume
    bindsym v exec $I3_SCRIPT/i3_pulseaudio_notification.sh source
    # Pulsemixer (CLI and curses mixer for PulseAudio)
    bindsym p exec --no-startup-id kitty --class floating_terminal -e pulsemixer; mode "default"
    # Alsamixer (soundcard mixer for ALSA soundcard driver)
    bindsym a exec --no-startup-id kitty --class floating_terminal -e alsamixer; mode "default"
    # Microphone test
    bindsym c exec --no-startup-id kitty --class floating_terminal -e arecord -vv -f dat /dev/null
    # Record audio with microphone
    bindsym r exec --no-startup-id kitty --class floating_terminal -e arecord -f S16_LE $(date +'%Y-%m-%d-%H-%M-%S').wav
    # Toggle mute
    bindsym m exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    # Volume (small/intermediate/large step)
    bindsym Ctrl+minus exec pactl set-source-volume @DEFAULT_SOURCE@ -1% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym Ctrl+plus  exec pactl set-source-volume @DEFAULT_SOURCE@ +1% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym minus      exec pactl set-source-volume @DEFAULT_SOURCE@ -5% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym plus       exec pactl set-source-volume @DEFAULT_SOURCE@ +5% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym Mod1+minus exec pactl set-source-volume @DEFAULT_SOURCE@ -10% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym Mod1+plus  exec pactl set-source-volume @DEFAULT_SOURCE@ +10% && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    # Special key compatibility: volume adjustment
    bindsym XF86AudioMicMute          exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh source
    bindsym XF86AudioMute             exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Ctrl+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym XF86AudioRaiseVolume      exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym XF86AudioLowerVolume      exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +10% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    bindsym Mod1+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -10% && $I3_SCRIPT/i3_pulseaudio_notification.sh
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Go to audio output mode
    bindsym o mode "$mode_audio_output"
    # Go to player mode: "Enter"
    bindsym Return mode "$mode_player"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# --------------------------------------------------------------------------------------
# 4. Window/Workspace-related Modes
# --------------------------------------------------------------------------------------

# Resize window (you can also use the mouse for that)
set $mode_resize Resize: [w]indow_layout [i/I]nput [Ctrl/NONE/Alt+(vim-key)]:S/M/L step (left/down/up/right) [Win+Shift+(vim-key)]:move (left/down/up/right)
bindsym Ctrl+Mod1+r mode "$mode_resize"
mode "$mode_resize" {
    # Window layout mode
    bindsym w mode "$mode_window_layout"
    # Resize window to input height/width
    bindsym i       exec $I3_SCRIPT/i3_window_operator.sh resize_to_input_and_move_floating_to_input
    bindsym Shift+i exec $I3_SCRIPT/i3_window_operator.sh resize_to_input_and_move_floating_to_input_in_one
    # Resize in small step
    bindsym Ctrl+h resize shrink width 1 px or 1 ppt
    bindsym Ctrl+j resize grow height 1 px or 1 ppt
    bindsym Ctrl+k resize shrink height 1 px or 1 ppt
    bindsym Ctrl+l resize grow width 1 px or 1 ppt
    # Resize in intermediate step
    bindsym h resize shrink width 5 px or 5 ppt
    bindsym j resize grow height 5 px or 5 ppt
    bindsym k resize shrink height 5 px or 5 ppt
    bindsym l resize grow width 5 px or 5 ppt
    # Resize in large step
    bindsym Mod1+h resize shrink width 10 px or 10 ppt
    bindsym Mod1+j resize grow height 10 px or 10 ppt
    bindsym Mod1+k resize shrink height 10 px or 10 ppt
    bindsym Mod1+l resize grow width 10 px or 10 ppt
    # i3 keybindings compatibility: change focus and move cursor to the center of focus window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: move focused window
    bindsym Mod4+Shift+h move left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+Shift+j move down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+Shift+k move up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+Shift+l move right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: move focus between output monitors (,/[/]/.)
    bindsym Mod4+comma        focus output left
    bindsym Mod4+bracketleft  focus output down
    bindsym Mod4+bracketright focus output up
    bindsym Mod4+period       focus output right
    # i3 keybindings compatibility: move window and focus between output monitors (</{/}/>)
    bindsym Mod4+Shift+comma        move container to output left; focus output left
    bindsym Mod4+Shift+bracketleft  move container to output down; focus output down
    bindsym Mod4+Shift+bracketright move container to output up; focus output up
    bindsym Mod4+Shift+period       move container to output right; focus output right
    # i3 keybindings compatibility: change focus between tiling/floating windows
    bindsym Mod4+space focus mode_toggle
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Titlebar mode
set $mode_titlebar Titlebar: [n]ew_name [r]estore_default_title [s]how_all_titles [h]ide_all_titles [t]oggle_all_titles [f]ontsize [T]itlebar_style
bindsym Mod4+Shift+t mode "$mode_titlebar"
mode "$mode_titlebar" {
    bindsym n exec i3-msg title_format $(rofi -dmenu -lines 0 -p "New title name")
    bindsym r title_format "%title"; exec notify-send -u low "Titlebar Mode" "Restore Default Title Name"
    bindsym s [all] border normal $default_border_width; exec notify-send -u low "Titlebar Mode" "Show All Titlebars"
    bindsym h [all] border pixel $default_border_width; exec notify-send -u low "Titlebar Mode" "Hide All Titlebars"
    bindsym t [all] border toggle $default_border_width; exec notify-send -u low "Titlebar Mode" "Toggle All Titlebars"
    # Fontsize mode, titlebar_style mnode
    bindsym f       mode "$mode_titlebar_fontsize"
    bindsym Shift+t mode "$mode_titlebar_style"
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Titlebar fontsize mode (within titlebar mode)
set $mode_titlebar_fontsize Titlebar fontsize: [1]:8pix [2]:9pix [3]:10pix [4]:11pix [5]:12pix [6]:13pix [7]:14pix [8]:15pix [9]:16pix [0]:0pix [i]nput
mode "$mode_titlebar_fontsize" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 8; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 9; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 10; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 11; mode "default"
    bindsym 5 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 12; mode "default"
    bindsym 6 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 13; mode "default"
    bindsym 7 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 14; mode "default"
    bindsym 8 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 15; mode "default"
    bindsym 9 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 16; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize 0; mode "default"
    bindsym i exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_fontsize input; mode "default"
    # Back to titlebar mode: "Enter"
    bindsym Return mode "$mode_titlebar"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Titlebar style mode (within titlebar mode)
set $mode_titlebar_style Titlebar style: [1/2]:tiling_window normal/pixel (enable/disable titlebar) [3/4]:floating_window normal/pixel (enable/disable titlebar)
mode "$mode_titlebar_style" {
    bindsym 1 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_style normal; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_default_valuechanger.sh titlebar_style pixel; mode "default"
    bindsym 3 exec $I3_SCRIPT/i3_default_valuechanger.sh floating_titlebar_style normal; mode "default"
    bindsym 4 exec $I3_SCRIPT/i3_default_valuechanger.sh floating_titlebar_style pixel; mode "default"
    # Back to titlebar mode: "Enter"
    bindsym Return mode "$mode_titlebar"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Mark mode [use rofi as input]
# Automark windows [https://github.com/lincheney/i3-automark] is required
set $mode_mark Mark: [a]utomark [m]ark [u]nmark [(Shift)+single-quote/semicolumn]:(do not show titlebar but) go_to/swap_with marked window
bindsym Mod4+Shift+m mode "$mode_mark"
mode "$mode_mark" {
    # Automark mode
    bindsym a mode "$mode_automark"
    # Mark operation
    bindsym m                exec $I3_SCRIPT/i3_mark_operator.sh mark rofi none title_on; mode "default"
    bindsym u                exec $I3_SCRIPT/i3_mark_operator.sh unmark rofi none title_on; mode "default"
    bindsym apostrophe       exec $I3_SCRIPT/i3_mark_operator.sh show_then_goto rofi none title_on; mode "default"
    bindsym Shift+apostrophe exec $I3_SCRIPT/i3_mark_operator.sh show_then_goto rofi none title_off; mode "default"
    bindsym semicolon        exec $I3_SCRIPT/i3_mark_operator.sh show_then_swap rofi none title_on; mode "default"
    bindsym Shift+semicolon  exec $I3_SCRIPT/i3_mark_operator.sh show_then_swap rofi none title_off; mode "default"
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Automark mode (within mark mode)
set $mode_automark Automark: [e]nable_automark_daemon [d]isable_automark_daemon [r]eload_automark_daemon [(Shift)+u]:unmark_all_automark (and remark)
mode "$mode_automark" {
    # Automark daemon
    bindsym e exec $I3_SCRIPT/i3_automark_operator.sh enable; mode "default"
    bindsym d exec $I3_SCRIPT/i3_automark_operator.sh disable; mode "default"
    bindsym r exec $I3_SCRIPT/i3_automark_operator.sh reload; mode "default"
    # Unmark automark
    bindsym u       exec $I3_SCRIPT/i3_mark_operator.sh unmark_all_automark
    bindsym Shift+u exec $I3_SCRIPT/i3_mark_operator.sh unmark_all_automark_and_remark
    # Back to mark mode: "Enter"
    bindsym Return mode "$mode_mark"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Window layout mode
set $mode_window_layout Window layout: [a]utotiling [c]enter_floating [w]indow_geometry [p]:swap_with_master_window [(Shift)+f/t]:float/tile (all) window [(Shift)+h/s]:hide/show (all) window
bindsym Mod4+Shift+w mode "$mode_window_layout"
mode "$mode_window_layout" {
    # Autotiling mode
    bindsym a mode "$mode_autotiling"
    # Float current window and move it to center
    bindsym c exec $I3_SCRIPT/i3_window_operator.sh center_current
    # Show current window geometry
    bindsym w exec $I3_SCRIPT/i3_window_operator.sh show_geometry
    # Swap with master window (swap with biggest window or last slave window)
    bindsym p exec $I3_SCRIPT/i3_swap_master_window.py
    # Float/Tile window
    bindsym f floating enable
    bindsym t floating disable
    # Float/Tile all windows in current workspace
    bindsym Shift+f exec $I3_SCRIPT/i3_window_operator.sh float_all
    bindsym Shift+t exec $I3_SCRIPT/i3_window_operator.sh tile_all
    # Hide/Show window
    bindsym h move scratchpad
    bindsym s scratchpad show
    # Hide/Show all windows to/from scratchpad
    bindsym Shift+h exec $I3_SCRIPT/i3_window_operator.sh hide_all
    bindsym Shift+s exec $I3_SCRIPT/i3_window_operator.sh show_all_scratchpad
    # i3 keybindings compatibility: change layout
    bindsym Mod4+Shift+e layout toggle splitv splith tabbed stacking; exec flash_window
    # i3 keybindings compatibility: change layout
    bindsym Mod4+s layout stacking; exec flash_window
    bindsym Mod4+w layout tabbed; exec flash_window
    bindsym Mod4+e layout toggle splitv splith; exec flash_window
    # i3 keybindings compatibility: change split direction
    bindsym Mod4+v         split vertical; exec flash_window
    bindsym Mod4+Shift+v   split horizontal; exec flash_window
    bindsym Mod4+q         split toggle; exec flash_window
    bindsym Mod4+backslash split toggle; exec flash_window
    # i3 keybindings compatibility: fullscreen
    bindsym Mod4+f       fullscreen toggle
    bindsym Mod4+Shift+f fullscreen toggle global
    # i3 keybindings compatibility: floating full screen
    bindsym Ctrl+Mod1+f exec $I3_SCRIPT/i3_window_operator.sh float_then_fullscreen
    # i3 keybindings compatibility: change focus and move cursor to the center of focus window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: move focused window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: move focus between output monitors (,/[/]/.)
    bindsym Mod4+comma        focus output left
    bindsym Mod4+bracketleft  focus output down
    bindsym Mod4+bracketright focus output up
    bindsym Mod4+period       focus output right
    # i3 keybindings compatibility: move window and focus between output monitors (</{/}/>)
    bindsym Mod4+Shift+comma        move container to output left; focus output left
    bindsym Mod4+Shift+bracketleft  move container to output down; focus output down
    bindsym Mod4+Shift+bracketright move container to output up; focus output up
    bindsym Mod4+Shift+period       move container to output right; focus output right
    # i3 keybindings compatibility: change focus between tiling/floating windows
    bindsym Mod4+space focus mode_toggle
    # i3 keybindings compatibility: toggle tiling/floating modes
    bindsym Mod4+Shift+space floating toggle
    # i3 keybinding compatibility: scratchpad
    bindsym Mod4+minus move scratchpad
    bindsym Mod4+plus  scratchpad show
    # i3 keybinding compatibility: scratchpad
    bindsym Mod4+Shift+minus [floating] move scratchpad
    bindsym Mod4+Shift+plus  [all] scratchpad show
    # i3 keybinding compatibility: Scratchpad
    bindsym Mod4+z move scratchpad
    bindsym Mod4+g scratchpad show
    # i3 keybinding compatibility: scratchpad
    bindsym Mod4+Shift+z [floating] move scratchpad
    bindsym Mod4+Shift+g [all] scratchpad show
    # i3 keybinding compatibility: kill window
    bindsym Mod4+Shift+q kill
    # Dunst compatibility: notification actions
    bindsym Ctrl+space            exec dunstctl close
    bindsym Ctrl+Shift+space      exec dunstctl history-pop
    bindsym Mod1+space            exec dunstctl close
    bindsym Mod1+Shift+space      exec dunstctl history-pop
    bindsym Ctrl+Mod1+Shift+space exec dunstctl action
    # Exit mode: "Enter", "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Autotiling mode (within window layout mode)
# -- Autotiling Script [https://github.com/nwg-piotr/autotiling]
# -- Installation: pip install autotiling
set $mode_autotiling Autotiling: [1]:enable_dwindling_layout [2]:enable_master-stack_layout [0]:disable_autotiling [s]et_default_autotiling
mode "$mode_autotiling" {
    # Autotiling - Dwindling
    bindsym 1 exec $I3_SCRIPT/i3_autotiling_operator.sh enable_dwindling; mode "default"
    # Autotiling - Master-stack (autotiling >= 1.8 is required)
    bindsym 2 exec $I3_SCRIPT/i3_autotiling_operator.sh enable_master_stack; mode "default"
    # Disable autotiling
    bindsym 0 exec $I3_SCRIPT/i3_autotiling_operator.sh disable_autotiling; mode "default"
    # Set default autotiling
    bindsym s mode "$mode_set_default_autotiling"
    # Back to window layout mode: "Enter"
    bindsym Return mode "$mode_window_layout"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Set default autotiling mode (within autotiling mode)
set $mode_set_default_autotiling Set default autotiling [1]:dwindling_layout [2]:master-stack_layout [0]:no_autotiling
mode "$mode_set_default_autotiling" {
    bindsym 1 exec $I3_SCRIPT/i3_autotiling_operator.sh set_dwindling_as_default; exec $I3_SCRIPT/i3_autotiling_operator.sh enable_dwindling; mode "default"
    bindsym 2 exec $I3_SCRIPT/i3_autotiling_operator.sh set_master_stack_as_default; exec $I3_SCRIPT/i3_autotiling_operator.sh enable_master_stack; mode "default"
    bindsym 0 exec $I3_SCRIPT/i3_autotiling_operator.sh set_no_autotiling_as_default; exec $I3_SCRIPT/i3_autotiling_operator.sh disable_autotiling; mode "default"
    # Back to autotiling mode: "Enter"
    bindsym Return mode "$mode_autotiling"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Workspace mode
set $mode_workspace Workspace: [s]ave [r]estore [n]ew_name [(Shift)+k]:(save_and) kill [(Shift)+single-quote/grave/semicolon]:go_to/move_window_to/swap_with [R]eload_name_for_rofi
bindsym Mod4+Shift+p mode $mode_workspace
mode "$mode_workspace" {
    # Save/Restore mode
    bindsym r mode $mode_restore_workspace
    bindsym s mode $mode_save_workspace
    # Current workspace operation
    bindsym n exec $I3_SCRIPT/i3_workspace_operator.sh rename_current; mode "default"
    bindsym k exec $I3_SCRIPT/i3_workspace_operator.sh kill_current; mode "default"
    # Input/Selected workspace operation
    bindsym Shift+k          exec $I3_SCRIPT/i3_workspace_operator.sh kill; mode "default"
    bindsym apostrophe       exec $I3_SCRIPT/i3_workspace_operator.sh goto; mode "default"
    bindsym Shift+apostrophe exec $I3_SCRIPT/i3_workspace_operator.sh goto_with_input; mode "default"
    bindsym Escape           exec $I3_SCRIPT/i3_workspace_operator.sh move_container; mode "default"
    bindsym grave            exec $I3_SCRIPT/i3_workspace_operator.sh move_container; mode "default"
    bindsym Shift+grave      exec $I3_SCRIPT/i3_workspace_operator.sh move_container_with_input; mode "default"
    bindsym semicolon        exec $I3_SCRIPT/i3_workspace_operator.sh swap; mode "default"
    bindsym Shift+semicolon  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_input; mode "default"
    # Generate workspace name list for rofi selector
    bindsym Shift+r exec $I3_SCRIPT/i3_genereate_workspace_name_list.sh; reload
    # Exit mode: "Enter" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Swap workspace mode (integrated with workspace mode)
set $mode_swap_workspace Swap workspace: [(Shift)+i]:interactive [Win+1~0]:A1~A0 (1~10) [Win+F1~F10]:B1~B0 (11~20) [Ctrl+F1~F10]:C1~C0 (21~30) [Alt+F1~F10]:D1~D0 (31~40) [Enter]:workspace_mode
bindsym Mod4+p mode $mode_swap_workspace
mode "$mode_swap_workspace" {
    # Swap interactively
    bindsym i       exec $I3_SCRIPT/i3_workspace_operator.sh swap; mode "default"
    bindsym Shift+i exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_input; mode "default"
    # Swap first 40 workspaces with index
    bindsym Mod4+1   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 1; mode "default"
    bindsym Mod4+2   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 2; mode "default"
    bindsym Mod4+3   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 3; mode "default"
    bindsym Mod4+4   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 4; mode "default"
    bindsym Mod4+5   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 5; mode "default"
    bindsym Mod4+6   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 6; mode "default"
    bindsym Mod4+7   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 7; mode "default"
    bindsym Mod4+8   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 8; mode "default"
    bindsym Mod4+9   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 9; mode "default"
    bindsym Mod4+0   exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 10; mode "default"
    bindsym Mod4+F1  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 11; mode "default"
    bindsym Mod4+F2  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 12; mode "default"
    bindsym Mod4+F3  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 13; mode "default"
    bindsym Mod4+F4  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 14; mode "default"
    bindsym Mod4+F5  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 15; mode "default"
    bindsym Mod4+F6  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 16; mode "default"
    bindsym Mod4+F7  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 17; mode "default"
    bindsym Mod4+F8  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 18; mode "default"
    bindsym Mod4+F9  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 19; mode "default"
    bindsym Mod4+F10 exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 20; mode "default"
    bindsym Ctrl+F1  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 21; mode "default"
    bindsym Ctrl+F2  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 22; mode "default"
    bindsym Ctrl+F3  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 23; mode "default"
    bindsym Ctrl+F4  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 24; mode "default"
    bindsym Ctrl+F5  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 25; mode "default"
    bindsym Ctrl+F6  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 26; mode "default"
    bindsym Ctrl+F7  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 27; mode "default"
    bindsym Ctrl+F8  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 28; mode "default"
    bindsym Ctrl+F9  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 29; mode "default"
    bindsym Ctrl+F10 exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 30; mode "default"
    bindsym Mod1+F1  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 31; mode "default"
    bindsym Mod1+F2  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 32; mode "default"
    bindsym Mod1+F3  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 33; mode "default"
    bindsym Mod1+F4  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 34; mode "default"
    bindsym Mod1+F5  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 35; mode "default"
    bindsym Mod1+F6  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 36; mode "default"
    bindsym Mod1+F7  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 37; mode "default"
    bindsym Mod1+F8  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 38; mode "default"
    bindsym Mod1+F9  exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 39; mode "default"
    bindsym Mod1+F10 exec $I3_SCRIPT/i3_workspace_operator.sh swap_with_index 40; mode "default"
    # Back to workspace mode: "Enter"
    bindsym Return mode "$mode_workspace"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Save workspace mode (within workspace mode)
set $mode_save_workspace Save workspace: [i]nteractively_select_workspace [s]ave_current_workspace [S]ave_all_workspaces
mode "$mode_save_workspace" {
    # Save interactively
    bindsym i exec $I3_SCRIPT/i3_workspace_operator.sh save
    # Save current workspace
    bindsym s exec $I3_SCRIPT/i3_workspace_operator.sh save_current; mode "$mode_workspace"
    # Save all workspaces
    bindsym Shift+s exec $I3_SCRIPT/i3_workspace_operator.sh save_all; mode "$mode_workspace"
    # Back to workspace mode: "Enter"
    bindsym Return mode "$mode_workspace"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Restore workspace mode (within workspace mode)
set $mode_restore_workspace Restore workspace: [i]nteractively_select_workspace [r]estore_current_workspace [R]estore_all_workspaces
mode "$mode_restore_workspace" {
    # Restore interactively
    bindsym i exec $I3_SCRIPT/i3_workspace_operator.sh restore
    # Restore current workspace
    bindsym r exec $I3_SCRIPT/i3_workspace_operator.sh restore_current; mode "$mode_workspace"
    # Restore all workspaces
    bindsym Shift+r exec $I3_SCRIPT/i3_workspace_operator.sh restore_all; mode "$mode_workspace"
    # Back to workspace mode: "Enter"
    bindsym Return mode "$mode_workspace"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

# Open URL mode
set $mode_open_url Open (prepend [Shift] for INC. mode): [1]:outlook [2]:discord [3]:notion [4]:chatGPT [5]:github [6]:youtube [7]:reddit [8]:spotify [9]:netflix [o]pen_URL [a]i [f]ile [r]esearch [c]link
bindsym Ctrl+Mod1+o mode $mode_open_url
mode "$mode_open_url" {
    # Open bookmarks in new window
    bindsym 1 exec $BROWSER --new-window outlook.com
    bindsym 2 exec $BROWSER --new-window discord.com
    bindsym 3 exec $BROWSER --new-window notion.so
    bindsym 4 exec $BROWSER --new-window chatgpt.com
    bindsym 5 exec $BROWSER --new-window github.com
    bindsym 6 exec $BROWSER --new-window youtube.com
    bindsym 7 exec $BROWSER --new-window new.reddit.com
    bindsym 8 exec $BROWSER --new-window open.spotify.com
    bindsym 9 exec $BROWSER --new-window netflix.com/browse
    # Open bookmark 1~3 in new window
    #bindsym 0 exec $BROWSER --new-window outlook.com discord.com notion.so
    bindsym 0 exec $BROWSER --new-window outlook.com discord.com notebooklm.google.com
    # Open bookmarks in new incognito window
    bindsym Shift+1 exec $BROWSER --incognito --new-window outlook.com
    bindsym Shift+2 exec $BROWSER --incognito --new-window discord.com
    bindsym Shift+3 exec $BROWSER --incognito --new-window notion.so
    bindsym Shift+4 exec $BROWSER --incognito --new-window chatgpt.com
    bindsym Shift+5 exec $BROWSER --incognito --new-window github.com
    bindsym Shift+6 exec $BROWSER --incognito --new-window youtube.com
    bindsym Shift+7 exec $BROWSER --incognito --new-window new.reddit.com
    bindsym Shift+8 exec $BROWSER --incognito --new-window open.spotify.com
    bindsym Shift+9 exec $BROWSER --incognito --new-window netflix.com/browse
    # Open URL in new window
    bindsym o exec $BROWSER --new-window $(rofi -dmenu -p "Open URL")
    # Open URL in new incognito window
    bindsym Shift+o exec $BROWSER --incognito --new-window $(rofi -dmenu -p "Open URL in incognito mode")
    # AI Assistant Mode
    bindsym a mode "$mode_ai"
    # File Mode
    bindsym f mode "$mode_file"
    # Research Mode
    bindsym r mode "$mode_research"
    # C-LINK Mode
    bindsym c mode "$mode_clink"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Return           mode "default"
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

set $mode_ai AI Assistant: [1]:chatGPT [2]:claude [3]:notebooklm [4]:deepseek [5]:grok [6]:perplexity
mode "$mode_ai" {
    bindsym 1 exec $BROWSER --new-window chatgpt.com
    bindsym 2 exec $BROWSER --new-window claude.ai
    bindsym 3 exec $BROWSER --new-window notebooklm.google.com
    bindsym 4 exec $BROWSER --new-window chat.deepseek.com
    bindsym 5 exec $BROWSER --new-window grok.com
    bindsym 6 exec $BROWSER --new-window perplexity.ai
    # Back to URL mode: "Enter"
    bindsym Return mode "$mode_open_url"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

set $mode_research Research: [1]:mendeley [2]:google_scholar [3]:arXiv [4]:sci-hub [5]:hugging_face [6]:kaggle [7]:research_gate [8]:paper_with_code [9]:deeplearn.org [0]:ollama
mode "$mode_research" {
    # Website
    bindsym 1 exec $BROWSER --new-window mendeley.com
    bindsym 2 exec $BROWSER --new-window scholar.google.com
    bindsym 3 exec $BROWSER --new-window arxiv.org
    bindsym 4 exec $BROWSER --new-window sci-hub.se
    bindsym 5 exec $BROWSER --new-window huggingface.co/papers
    bindsym 6 exec $BROWSER --new-window kaggle.com
    bindsym 7 exec $BROWSER --new-window researchgate.net
    bindsym 8 exec $BROWSER --new-window paperswithcode.com
    bindsym 9 exec $BROWSER --new-window deeplearn.org
    bindsym 0 exec $BROWSER --new-window ollama.com
    # Back to URL mode: "Enter"
    bindsym Return mode "$mode_open_url"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

set $mode_file File (Prepend [Shift] to open results at once): [1]:Open_PDF_file [2]:Search_PDF_file [3]:Search_PDF_file_in_directory [0]:stop searching (kill process)
mode "$mode_file" {
    # PDF file
    bindsym 1       exec $I3_SCRIPT/i3_file_operator.sh open_PDF
    bindsym 2       exec $I3_SCRIPT/i3_file_operator.sh search_PDF
    bindsym Shift+2 exec $I3_SCRIPT/i3_file_operator.sh search_PDF_open_at_once
    bindsym 3       exec $I3_SCRIPT/i3_file_operator.sh search_PDF_in_dir
    bindsym Shift+3 exec $I3_SCRIPT/i3_file_operator.sh search_PDF_in_dir_open_at_once
    bindsym 0       exec $I3_SCRIPT/i3_file_operator.sh stop_searching
    # i3 keybindings compatibility: change focus and move cursor to the center of focus window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: change focus between tiling/floating windows
    bindsym Mod4+space focus mode_toggle
    # i3 keybindings compatibility: toggle tiling/floating modes
    bindsym Mod4+Shift+space floating toggle
    # i3 keybindings compatibility: move focused window
    bindsym Mod4+h focus left, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+j focus down, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+k focus up, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    bindsym Mod4+l focus right, exec $I3_SCRIPT/i3_cursor_operator.sh move_cursor_inside_window
    # i3 keybindings compatibility: kill focused window
    bindsym Mod4+Shift+q kill
    # Back to URL mode: "Enter"
    bindsym Return mode "$mode_open_url"
    # Exit mode: "Escape" or "Ctrl"+"[" (vim-like Escape)
    bindsym Escape           mode "default"
    bindsym Ctrl+bracketleft mode "default"
}
